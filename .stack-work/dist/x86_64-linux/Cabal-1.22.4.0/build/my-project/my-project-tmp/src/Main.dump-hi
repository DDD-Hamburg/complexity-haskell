
==================== FINAL INTERFACE ====================
2017-01-23 22:59:33.74869 UTC

interface main@main:Main [family instance module] 7102
  interface hash: a36039395087331053f73a443a0be6ab
  ABI hash: c0fdf38e96b8e7e564400363ce53e756
  export-list hash: a75eba9b94307635d3ff48e1eaba45b0
  orphan hash: 8e401814aacd33c871fa218fb5e3069e
  flag hash: 04a755db0739f9377b12a01bdda6f892
  sig of: Nothing
  used TH splices: False
  where
exports:
  Main.calc_total
  Main.main
  Main.Cart{Main.Cart Main.cart Main.discount Main.discountedItemIds}
  Main.DiscountedItems
  Main.Item{Main.Item Main.desc Main.itemId Main.pricePerUnit Main.quantity}
module dependencies:
package dependencies: aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS
                      appar-0.1.4@appar_3CaAIJvwfNLEy6bEqQYYYc
                      array-0.5.1.0@array_E0sTtauuKsGDLZoT7lTbgZ
                      attoparsec-0.12.1.6@attop_5hY081sve2m8WX8p1glGNS
                      auto-update-0.1.2.2@autou_2DkwjWlXXrh60SbDElbu3f base-4.8.1.0
                      binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd
                      blaze-builder-0.4.0.1@blaze_6BKEupqZliOD9r4rLG9ckJ
                      byteorder-1.0.4@byteo_7FRRspR69KU9KubkPZfm74
                      bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH
                      case-insensitive-1.2.0.4@casei_1oUSRTaAjIb5W25lYdnxTT
                      containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN
                      data-default-class-0.0.1@datad_CgDdtafiXY68XlqDb5IqXw
                      deepseq-1.4.1.1@deeps_LbCWUlehDDeLxurARKDH5o
                      directory-1.2.2.0@direc_KowvXytSqazBcvN7MGpFtg
                      dlist-0.7.1.1@dlist_CWmYfPEEnFvAl2glQ7oHsq
                      exceptions-0.8.0.2@excep_8GsEeHgaIks3pVGk6GaELJ
                      filepath-1.4.0.0@filep_KsGE6pHE5eZHSN90ZVax6A ghc-prim-0.4.0.0
                      hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy
                      http2-1.0.4@http2_HyIxdiPi8mi3tgJjMf6vKg
                      http-date-0.0.6.1@httpd_0dHtxK84Zgj3nDKVGfG5ak
                      http-types-0.8.6@httpt_9EbXaDnKxhPJJk9e6cJlj9 integer-gmp-1.0.0.0
                      iproute-1.5.0@iprou_B0SP369TCng5d8Pd7LByY9
                      lifted-base-0.2.3.6@lifte_K3cQFA6mRg85rpDaA9numU
                      mmorph-1.0.4@mmorp_8dNpUU8QFPe77rrwKAb20b
                      monad-control-1.0.0.4@monad_3XCDr1mqlERGZgaxuwJF6b
                      mtl-2.2.1@mtl_KMpng31YRYc5JfMWFZ3FCU
                      mwc-random-0.13.3.2@mwcra_EHoyvQtULlqL3HO0jyND4E
                      network-2.6.2.1@netwo_F6mK9sCIw3M5SbZMt2lUQE
                      primitive-0.6@primi_3d4UsQu7pJCEtlsxN3gLjk
                      random-1.1@rando_1z8Ujelqc6aKgvPnbRUKkP
                      regex-base-0.93.2@regex_2j0nR3pc4q24HZdEmShSMX
                      regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl
                      regex-compat-0.95.1@regex_LfevtAmd1jA93E87NZxMhh
                      resourcet-1.1.6@resou_Ic1TzDDmqYbFNHpzRsDmfS
                      scientific-0.3.3.8@scien_5NQHiMKEgH2DOLHdLSFbA2
                      scotty-0.10.2@scott_6OfcSoMF1DzJDD02URR8oz
                      simple-sendfile-0.2.21@simpl_8JinxnD07KP3TRgmAVYt64
                      stm-2.4.4@stm_C1kFMnPqFjvDhFjgMZGUpr
                      streaming-commons-0.1.12.1@strea_1kUF85WuW2a4bnXucVgo6A
                      stringsearch-0.3.6.6@strin_LD3tXxltwdY99HXR2kj3px
                      text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh
                      time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH
                      transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X
                      transformers-base-0.4.4@trans_88TAFm21vtn2NrYUppy50c
                      unix-2.7.1.0@unix_A3WgcI5QiHK4PDo4jSYdwQ
                      unix-compat-0.4.1.4@unixc_DeAF5HEzYMu4CPLnbGbHUz
                      unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a
                      vault-0.3.0.4@vault_0ClHfttEXGC8o1TYTuenH0
                      vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs
                      wai-3.0.3.0@wai_BZZHcfcYsq30yS9HqF042t
                      wai-extra-3.0.10@waiex_7YAgNm7yx5cDgDajl1SrIr
                      warp-3.1.2@warp_4CWLnd0ndNCLeRHFAcWsw5
                      word8-0.1.2@word8_JFinUbIMmjfAdy4qiZBFBe
orphans: aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson.Types.Generic
         aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson.Types.Instances
         attoparsec-0.12.1.6@attop_5hY081sve2m8WX8p1glGNS:Data.Attoparsec.ByteString.Char8
         base-4.8.1.0:GHC.Base base-4.8.1.0:GHC.Float
         binary-0.7.5.0@binar_IvYoLp9H6Xy3zEH13MmZwd:Data.Binary.Generic
         bytestring-0.10.6.0@bytes_6elQVSg5cWdFrvRnfxTUrH:Data.ByteString.Builder
         hashable-1.2.3.3@hasha_2GTZqecVp8NJZrNuKzGxfy:Data.Hashable.Generic
         network-2.6.2.1@netwo_F6mK9sCIw3M5SbZMt2lUQE:Network.Socket
         network-2.6.2.1@netwo_F6mK9sCIw3M5SbZMt2lUQE:Network.Socket.Types
         regex-base-0.93.2@regex_2j0nR3pc4q24HZdEmShSMX:Text.Regex.Base.Context
         regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl:Text.Regex.Posix.ByteString
         regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl:Text.Regex.Posix.ByteString.Lazy
         regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl:Text.Regex.Posix.Sequence
         regex-posix-0.95.2@regex_6Fv9CTZU9JMB52PT4YRZTl:Text.Regex.Posix.String
         stm-2.4.4@stm_C1kFMnPqFjvDhFjgMZGUpr:Control.Monad.STM
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Show
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Calendar.Gregorian
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.Format.Parse
         time-1.5.0.1@time_AXTdBF9VRQoBOqJT6qtmVH:Data.Time.LocalTime.LocalTime
         transformers-0.4.2.0@trans_3eG64VdP2vzGjP6wJiCp5X:Control.Monad.Trans.Error
         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Fusion.Stream
         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Unboxed
family instance modules: attoparsec-0.12.1.6@attop_5hY081sve2m8WX8p1glGNS:Data.Attoparsec.Internal.Types
                         base-4.8.1.0:Control.Applicative base-4.8.1.0:Data.Either
                         base-4.8.1.0:Data.Functor.Identity base-4.8.1.0:Data.Monoid
                         base-4.8.1.0:Data.Type.Equality base-4.8.1.0:Data.Void
                         base-4.8.1.0:GHC.Exts base-4.8.1.0:GHC.Generics
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntMap.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.IntSet.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Map.Base
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Sequence
                         containers-0.5.6.2@conta_LKCPrTJwOTOLk4OU37YmeN:Data.Set.Base
                         dlist-0.7.1.1@dlist_CWmYfPEEnFvAl2glQ7oHsq:Data.DList
                         iproute-1.5.0@iprou_B0SP369TCng5d8Pd7LByY9:Data.IP.Addr
                         iproute-1.5.0@iprou_B0SP369TCng5d8Pd7LByY9:Data.IP.Range
                         monad-control-1.0.0.4@monad_3XCDr1mqlERGZgaxuwJF6b:Control.Monad.Trans.Control
                         mwc-random-0.13.3.2@mwcra_EHoyvQtULlqL3HO0jyND4E:System.Random.MWC
                         primitive-0.6@primi_3d4UsQu7pJCEtlsxN3gLjk:Control.Monad.Primitive
                         resourcet-1.1.6@resou_Ic1TzDDmqYbFNHpzRsDmfS:Control.Monad.Trans.Resource.Internal
                         scotty-0.10.2@scott_6OfcSoMF1DzJDD02URR8oz:Web.Scotty.Internal.Types
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text
                         text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashMap.Base
                         unordered-containers-0.2.5.1@unord_7E41cj9RvqSJeZ4jSnbs1a:Data.HashSet
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Primitive
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Storable
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Unboxed
                         vector-0.10.12.3@vecto_1COyUuV1LrA1IjYnWfJnbs:Data.Vector.Unboxed.Base
import  -/  aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson 953879645ca2d0f885d102b3004a2ecc
import  -/  aeson-0.8.0.2@aeson_DIEa3Sufx1r590sbWNooBS:Data.Aeson.Types.Class ad68768181ba539246931e90d726eff2
import  -/  base-4.8.1.0:Data.Foldable 2e5acb797cfda6b3b7fabd7052abe290
import  -/  base-4.8.1.0:Data.Monoid bd73caba6e77f9944cb89ef5bec300c6
import  -/  base-4.8.1.0:GHC.Base 1db77db5dae73d8c424c85b09fbadb89
import  -/  base-4.8.1.0:GHC.Generics 5ed2bc6fa96276d0ee34a25b06dd3344
import  -/  base-4.8.1.0:GHC.Num 9f42750c866f5832ca565146bd660c60
import  -/  base-4.8.1.0:GHC.Real 4c3b525ecbd4d62bb287aec36d4c2f0d
import  -/  base-4.8.1.0:GHC.Show b8c65ca3124f92a166c9f05120382442
import  -/  base-4.8.1.0:Prelude 518f762991bc287d78f21a73c974da1f
import  -/  base-4.8.1.0:System.IO d541b8bdf18c04de3ab7ea0277c4eba3
import  -/  ghc-prim-0.4.0.0:GHC.Classes e1f4ff80f7b5262008a595d29986fb18
import  -/  scotty-0.10.2@scott_6OfcSoMF1DzJDD02URR8oz:Web.Scotty 549bbd07a7aac846688909842aab357d
import  -/  text-1.2.1.3@text_1l1AN4I48k37RaQ6fm6CEh:Data.Text.Lazy 34d5551acbea129fa38da92579d41df3
84eb0b5b09a1b6b79796e8a12fc81577
  $fConstructorCart :: GHC.Generics.Constructor Main.C1_0Cart
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.C1_0Cart
                  Main.$fConstructorCart_$cconName
                  Main.$fConstructorCart_$s$dmconFixity
                  Main.$fConstructorCart_$cconIsRecord -}
51fbde1042a2028e433698573ee85ee0
  $fConstructorCart1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Cart"#) -}
84eb0b5b09a1b6b79796e8a12fc81577
  $fConstructorCart_$cconIsRecord ::
    t Main.C1_0Cart f a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.C1_0Cart f a20 ->
                 GHC.Types.True) -}
84eb0b5b09a1b6b79796e8a12fc81577
  $fConstructorCart_$cconName ::
    t Main.C1_0Cart f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.C1_0Cart f a20 ->
                 Main.$fConstructorCart1) -}
84eb0b5b09a1b6b79796e8a12fc81577
  $fConstructorCart_$s$dmconFixity ::
    t Main.C1_0Cart f a -> GHC.Generics.Fixity
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.C1_0Cart f a20 ->
                 GHC.Generics.Prefix) -}
6f7babb77a91596be120eaa97df8d814
  $fConstructorItem :: GHC.Generics.Constructor Main.C1_0Item
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.C1_0Item
                  Main.$fConstructorItem_$cconName
                  Main.$fConstructorItem_$s$dmconFixity
                  Main.$fConstructorItem_$cconIsRecord -}
4391781f02cac78394f115db119f7975
  $fConstructorItem1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Item"#) -}
6f7babb77a91596be120eaa97df8d814
  $fConstructorItem_$cconIsRecord ::
    t Main.C1_0Item f a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.C1_0Item f a20 ->
                 GHC.Types.True) -}
6f7babb77a91596be120eaa97df8d814
  $fConstructorItem_$cconName ::
    t Main.C1_0Item f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.C1_0Item f a20 ->
                 Main.$fConstructorItem1) -}
6f7babb77a91596be120eaa97df8d814
  $fConstructorItem_$s$dmconFixity ::
    t Main.C1_0Item f a -> GHC.Generics.Fixity
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.C1_0Item f a20 ->
                 GHC.Generics.Prefix) -}
d44482af14617148901f087ae5698d7b
  $fDatatypeCart :: GHC.Generics.Datatype Main.D1Cart
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.D1Cart
                  Main.$fDatatypeCart_$cdatatypeName
                  Main.$fDatatypeCart_$cmoduleName
                  Main.$fDatatypeCart_$s$dmisNewtype -}
bfb72e26803bf54d5ddcd5780aba5680
  $fDatatypeCart1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Main"#) -}
d44482af14617148901f087ae5698d7b
  $fDatatypeCart_$cdatatypeName ::
    t Main.D1Cart f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.D1Cart f a20 ->
                 Main.$fConstructorCart1) -}
d44482af14617148901f087ae5698d7b
  $fDatatypeCart_$cmoduleName ::
    t Main.D1Cart f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.D1Cart f a20 ->
                 Main.$fDatatypeCart1) -}
d44482af14617148901f087ae5698d7b
  $fDatatypeCart_$s$dmisNewtype ::
    t Main.D1Cart f a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.D1Cart f a20 ->
                 GHC.Types.False) -}
ecadfdca88f691c30af83aa73ec6c21e
  $fDatatypeItem :: GHC.Generics.Datatype Main.D1Item
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.D1Item
                  Main.$fDatatypeItem_$cdatatypeName
                  Main.$fDatatypeItem_$cmoduleName
                  Main.$fDatatypeItem_$s$dmisNewtype -}
ecadfdca88f691c30af83aa73ec6c21e
  $fDatatypeItem_$cdatatypeName ::
    t Main.D1Item f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.D1Item f a20 ->
                 Main.$fConstructorItem1) -}
ecadfdca88f691c30af83aa73ec6c21e
  $fDatatypeItem_$cmoduleName ::
    t Main.D1Item f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.D1Item f a20 ->
                 Main.$fDatatypeCart1) -}
ecadfdca88f691c30af83aa73ec6c21e
  $fDatatypeItem_$s$dmisNewtype ::
    t Main.D1Item f a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <L,A>,
     Unfolding: InlineRule (-1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.D1Item f a20 ->
                 GHC.Types.False) -}
ab76cf51dded7f800606e6b0463503ba
  $fFromJSONCart :: Data.Aeson.Types.Class.FromJSON Main.Cart
  DFunId[0]
  {- Arity: 1, Strictness: <L,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fFromJSONCart_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0] <Main.Cart>_N)) -}
ab76cf51dded7f800606e6b0463503ba
  $fFromJSONCart_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.Cart
  {- Arity: 1, Strictness: <L,1*U> -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fFromJSONItem :: Data.Aeson.Types.Class.FromJSON Main.Item
  DFunId[0]
  {- Arity: 1, Strictness: <L,1*U>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fFromJSONItem_$cparseJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0] <Main.Item>_N)) -}
f4163ed3ab7b314cb0d9341ba56fbc8e
  $fFromJSONItem1 ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser
         (GHC.Generics.M1
            GHC.Generics.D
            Main.D1Item
            (GHC.Generics.M1
               GHC.Generics.C
               Main.C1_0Item
               ((GHC.Generics.S1
                   Main.S1_0_0Item (GHC.Generics.Rec0 GHC.Base.String)
                 GHC.Generics.:*: GHC.Generics.S1
                                    Main.S1_0_1Item (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:*: (GHC.Generics.S1
                                    Main.S1_0_2Item (GHC.Generics.Rec0 GHC.Types.Float)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     Main.S1_0_3Item
                                                     (GHC.Generics.Rec0 GHC.Types.Int))))
            GHC.Prim.Any)
  {- Arity: 1, Strictness: <L,1*U> -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fFromJSONItem_$cparseJSON ::
    Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser Main.Item
  {- Arity: 1, Strictness: <L,1*U>,
     Unfolding: (\ x :: Data.Aeson.Types.Internal.Value ->
                 let {
                   a20 :: Data.Aeson.Types.Internal.Parser
                            (GHC.Generics.M1
                               GHC.Generics.D
                               Main.D1Item
                               (GHC.Generics.M1
                                  GHC.Generics.C
                                  Main.C1_0Item
                                  ((GHC.Generics.S1
                                      Main.S1_0_0Item (GHC.Generics.Rec0 GHC.Base.String)
                                    GHC.Generics.:*: GHC.Generics.S1
                                                       Main.S1_0_1Item
                                                       (GHC.Generics.Rec0 GHC.Base.String))
                                   GHC.Generics.:*: (GHC.Generics.S1
                                                       Main.S1_0_2Item
                                                       (GHC.Generics.Rec0 GHC.Types.Float)
                                                     GHC.Generics.:*: GHC.Generics.S1
                                                                        Main.S1_0_3Item
                                                                        (GHC.Generics.Rec0
                                                                           GHC.Types.Int))))
                               GHC.Prim.Any)
                   = Main.$fFromJSONItem1 x
                 } in
                 (\ @ (f1 :: * -> *)
                    @ r
                    kf :: Data.Aeson.Types.Internal.Failure f1 r
                    ks :: Data.Aeson.Types.Internal.Success Main.Item f1 r ->
                  a20
                    `cast`
                  (Data.Aeson.Types.Internal.NTCo:Parser[0]
                       (Sub (Sym (Main.Rep_Item[0])) <GHC.Prim.Any>_N))
                    @ f1
                    @ r
                    kf
                    (\ a29 :: GHC.Generics.Rep Main.Item GHC.Prim.Any ->
                     ks (Main.$fFromJSONItem_$cto @ GHC.Prim.Any a29)))
                   `cast`
                 (Sym (Data.Aeson.Types.Internal.NTCo:Parser[0] <Main.Item>_R))) -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fFromJSONItem_$cto :: GHC.Generics.Rep Main.Item x -> Main.Item
  {- Arity: 1, HasNoCafRefs,
     Strictness: <S(SS),1*U(1*U(U,U),1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x ds :: GHC.Generics.Rep Main.Item x ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Main.Rep_Item[0]))
                           (Trans
                                (GHC.Generics.NTCo:M1[0]
                                     <GHC.Generics.D>_P
                                     <Main.D1Item>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        Main.C1_0Item
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            Main.S1_0_0Item
                                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             Main.S1_0_1Item
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             Main.S1_0_2Item
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Float)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              Main.S1_0_3Item
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Int)))>_R)
                                (GHC.Generics.NTCo:M1[0]
                                     <GHC.Generics.C>_P
                                     <Main.C1_0Item>_P
                                     <(GHC.Generics.M1
                                         GHC.Generics.S
                                         Main.S1_0_0Item
                                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                       GHC.Generics.:*: GHC.Generics.M1
                                                          GHC.Generics.S
                                                          Main.S1_0_1Item
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String))
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          Main.S1_0_2Item
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Types.Float)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           Main.S1_0_3Item
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              GHC.Types.Int))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds1 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 case ds2 of wild2 { GHC.Generics.:*: ds5 ds6 ->
                 Main.Item
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.NTCo:M1[0]
                             <GHC.Generics.S>_P
                             <Main.S1_0_0Item>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.NTCo:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.NTCo:M1[0]
                             <GHC.Generics.S>_P
                             <Main.S1_0_1Item>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R <x>_N)
                        (GHC.Generics.NTCo:K1[0]
                             <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                   ds5
                     `cast`
                   (Trans
                        (GHC.Generics.NTCo:M1[0]
                             <GHC.Generics.S>_P
                             <Main.S1_0_2Item>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Float>_R <x>_N)
                        (GHC.Generics.NTCo:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Float>_R <x>_P))
                   ds6
                     `cast`
                   (Trans
                        (GHC.Generics.NTCo:M1[0]
                             <GHC.Generics.S>_P
                             <Main.S1_0_3Item>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R <x>_N)
                        (GHC.Generics.NTCo:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P)) } } }) -}
ab76cf51dded7f800606e6b0463503ba
  $fGenericCart :: GHC.Generics.Generic Main.Cart
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Cart Main.$fGenericCart_$cfrom Main.$fGenericCart_$cto -}
ab76cf51dded7f800606e6b0463503ba
  $fGenericCart_$cfrom :: Main.Cart -> GHC.Generics.Rep Main.Cart x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x ds :: Main.Cart ->
                 case ds of wild { Main.Cart g1 g2 g3 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         Main.S1_0_0Cart
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         Main.S1_0_1Cart
                         (GHC.Generics.K1 GHC.Generics.R Main.DiscountedItems)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          Main.S1_0_2Cart
                                          (GHC.Generics.K1 GHC.Generics.R [Main.Item]))
                    @ x
                    g1
                      `cast`
                    (Trans
                         (Sym (GHC.Generics.NTCo:K1[0]
                                   <GHC.Generics.R>_P <GHC.Types.Float>_R <x>_P))
                         (Sym (GHC.Generics.NTCo:M1[0]
                                   <GHC.Generics.S>_P
                                   <Main.S1_0_0Cart>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Types.Float>_R) <x>_N))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            Main.S1_0_1Cart
                            (GHC.Generics.K1 GHC.Generics.R Main.DiscountedItems))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            Main.S1_0_2Cart
                            (GHC.Generics.K1 GHC.Generics.R [Main.Item]))
                       @ x
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.NTCo:K1[0]
                                      <GHC.Generics.R>_P <Main.DiscountedItems>_R <x>_P))
                            (Sym (GHC.Generics.NTCo:M1[0]
                                      <GHC.Generics.S>_P
                                      <Main.S1_0_1Cart>_P
                                      <GHC.Generics.K1
                                         GHC.Generics.R Main.DiscountedItems>_R) <x>_N))
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.NTCo:K1[0]
                                      <GHC.Generics.R>_P <[Main.Item]>_R <x>_P))
                            (Sym (GHC.Generics.NTCo:M1[0]
                                      <GHC.Generics.S>_P
                                      <Main.S1_0_2Cart>_P
                                      <GHC.Generics.K1 GHC.Generics.R [Main.Item]>_R) <x>_N))))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.NTCo:M1[0]
                                <GHC.Generics.C>_P
                                <Main.C1_0Cart>_P
                                <GHC.Generics.M1
                                   GHC.Generics.S
                                   Main.S1_0_0Cart
                                   (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float)
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     Main.S1_0_1Cart
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R Main.DiscountedItems)
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      Main.S1_0_2Cart
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         [Main.Item]))>_R))
                      (Trans
                           (Sym (GHC.Generics.NTCo:M1[0]
                                     <GHC.Generics.D>_P
                                     <Main.D1Cart>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        Main.C1_0Cart
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           Main.S1_0_0Cart
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             Main.S1_0_1Cart
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R Main.DiscountedItems)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              Main.S1_0_2Cart
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Main.Item])))>_R))
                           (Sub (Sym (Main.Rep_Cart[0])))) <x>_N) }) -}
ab76cf51dded7f800606e6b0463503ba
  $fGenericCart_$cto :: GHC.Generics.Rep Main.Cart x -> Main.Cart
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),1*U(U,1*U(U,U))>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x ds :: GHC.Generics.Rep Main.Cart x ->
                 case ds
                        `cast`
                      (Trans
                           (Sub (Main.Rep_Cart[0]))
                           (Trans
                                (GHC.Generics.NTCo:M1[0]
                                     <GHC.Generics.D>_P
                                     <Main.D1Cart>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        Main.C1_0Cart
                                        (GHC.Generics.M1
                                           GHC.Generics.S
                                           Main.S1_0_0Cart
                                           (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float)
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             Main.S1_0_1Cart
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R Main.DiscountedItems)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              Main.S1_0_2Cart
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 [Main.Item])))>_R)
                                (GHC.Generics.NTCo:M1[0]
                                     <GHC.Generics.C>_P
                                     <Main.C1_0Cart>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.S
                                        Main.S1_0_0Cart
                                        (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float)
                                      GHC.Generics.:*: (GHC.Generics.M1
                                                          GHC.Generics.S
                                                          Main.S1_0_1Cart
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R Main.DiscountedItems)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           Main.S1_0_2Cart
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              [Main.Item]))>_R)) <x>_N) of wild { GHC.Generics.:*: ds1 ds2 ->
                 case ds2 of wild1 { GHC.Generics.:*: ds3 ds4 ->
                 Main.Cart
                   ds1
                     `cast`
                   (Trans
                        (GHC.Generics.NTCo:M1[0]
                             <GHC.Generics.S>_P
                             <Main.S1_0_0Cart>_P
                             <GHC.Generics.K1 GHC.Generics.R GHC.Types.Float>_R <x>_N)
                        (GHC.Generics.NTCo:K1[0]
                             <GHC.Generics.R>_P <GHC.Types.Float>_R <x>_P))
                   ds3
                     `cast`
                   (Trans
                        (GHC.Generics.NTCo:M1[0]
                             <GHC.Generics.S>_P
                             <Main.S1_0_1Cart>_P
                             <GHC.Generics.K1 GHC.Generics.R Main.DiscountedItems>_R <x>_N)
                        (GHC.Generics.NTCo:K1[0]
                             <GHC.Generics.R>_P <Main.DiscountedItems>_R <x>_P))
                   ds4
                     `cast`
                   (Trans
                        (GHC.Generics.NTCo:M1[0]
                             <GHC.Generics.S>_P
                             <Main.S1_0_2Cart>_P
                             <GHC.Generics.K1 GHC.Generics.R [Main.Item]>_R <x>_N)
                        (GHC.Generics.NTCo:K1[0]
                             <GHC.Generics.R>_P <[Main.Item]>_R <x>_P)) } }) -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fGenericItem :: GHC.Generics.Generic Main.Item
  DFunId[0]
  {- HasNoCafRefs, Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Item Main.$fGenericItem_$cfrom Main.$fFromJSONItem_$cto -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fGenericItem_$cfrom :: Main.Item -> GHC.Generics.Rep Main.Item x
  {- Arity: 1, HasNoCafRefs, Strictness: <S,1*U(U,U,U,U)>m,
     Unfolding: InlineRule (1, True, False)
                (\ @ x ds :: Main.Item ->
                 case ds of wild { Main.Item g1 g2 g3 g4 ->
                 (GHC.Generics.:*:
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         Main.S1_0_0Item
                         (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          Main.S1_0_1Item
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                    @ (GHC.Generics.M1
                         GHC.Generics.S
                         Main.S1_0_2Item
                         (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float)
                       GHC.Generics.:*: GHC.Generics.M1
                                          GHC.Generics.S
                                          Main.S1_0_3Item
                                          (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                    @ x
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            Main.S1_0_0Item
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            Main.S1_0_1Item
                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String))
                       @ x
                       g1
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.NTCo:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.NTCo:M1[0]
                                      <GHC.Generics.S>_P
                                      <Main.S1_0_0Item>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N))
                       g2
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.NTCo:K1[0]
                                      <GHC.Generics.R>_P <GHC.Base.String>_R <x>_P))
                            (Sym (GHC.Generics.NTCo:M1[0]
                                      <GHC.Generics.S>_P
                                      <Main.S1_0_1Item>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Base.String>_R) <x>_N)))
                    (GHC.Generics.:*:
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            Main.S1_0_2Item
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float))
                       @ (GHC.Generics.M1
                            GHC.Generics.S
                            Main.S1_0_3Item
                            (GHC.Generics.K1 GHC.Generics.R GHC.Types.Int))
                       @ x
                       g3
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.NTCo:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Float>_R <x>_P))
                            (Sym (GHC.Generics.NTCo:M1[0]
                                      <GHC.Generics.S>_P
                                      <Main.S1_0_2Item>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Float>_R) <x>_N))
                       g4
                         `cast`
                       (Trans
                            (Sym (GHC.Generics.NTCo:K1[0]
                                      <GHC.Generics.R>_P <GHC.Types.Int>_R <x>_P))
                            (Sym (GHC.Generics.NTCo:M1[0]
                                      <GHC.Generics.S>_P
                                      <Main.S1_0_3Item>_P
                                      <GHC.Generics.K1 GHC.Generics.R GHC.Types.Int>_R) <x>_N))))
                   `cast`
                 (Trans
                      (Sym (GHC.Generics.NTCo:M1[0]
                                <GHC.Generics.C>_P
                                <Main.C1_0Item>_P
                                <(GHC.Generics.M1
                                    GHC.Generics.S
                                    Main.S1_0_0Item
                                    (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                  GHC.Generics.:*: GHC.Generics.M1
                                                     GHC.Generics.S
                                                     Main.S1_0_1Item
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R GHC.Base.String))
                                 GHC.Generics.:*: (GHC.Generics.M1
                                                     GHC.Generics.S
                                                     Main.S1_0_2Item
                                                     (GHC.Generics.K1
                                                        GHC.Generics.R GHC.Types.Float)
                                                   GHC.Generics.:*: GHC.Generics.M1
                                                                      GHC.Generics.S
                                                                      Main.S1_0_3Item
                                                                      (GHC.Generics.K1
                                                                         GHC.Generics.R
                                                                         GHC.Types.Int))>_R))
                      (Trans
                           (Sym (GHC.Generics.NTCo:M1[0]
                                     <GHC.Generics.D>_P
                                     <Main.D1Item>_P
                                     <GHC.Generics.M1
                                        GHC.Generics.C
                                        Main.C1_0Item
                                        ((GHC.Generics.M1
                                            GHC.Generics.S
                                            Main.S1_0_0Item
                                            (GHC.Generics.K1 GHC.Generics.R GHC.Base.String)
                                          GHC.Generics.:*: GHC.Generics.M1
                                                             GHC.Generics.S
                                                             Main.S1_0_1Item
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String))
                                         GHC.Generics.:*: (GHC.Generics.M1
                                                             GHC.Generics.S
                                                             Main.S1_0_2Item
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Types.Float)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              Main.S1_0_3Item
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Int)))>_R))
                           (Sub (Sym (Main.Rep_Item[0])))) <x>_N) }) -}
6e28830a55af2c8c8bf62a44cf244fc7
  $fSelectorCart :: GHC.Generics.Selector Main.S1_0_0Cart
  DFunId[0]
  {- Arity: 1, Strictness: <L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fSelectorCart_$cselName
                  `cast`
                (Sym (GHC.Generics.NTCo:Selector[0] <Main.S1_0_0Cart>_N)) -}
77f62e5aa49cd46b809a5e2d4e89f9c6
  $fSelectorCart0 :: GHC.Generics.Selector Main.S1_0_1Cart
  DFunId[0]
  {- Arity: 1, Strictness: <L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fSelectorCart0_$cselName
                  `cast`
                (Sym (GHC.Generics.NTCo:Selector[0] <Main.S1_0_1Cart>_N)) -}
77f62e5aa49cd46b809a5e2d4e89f9c6
  $fSelectorCart0_$cselName ::
    t Main.S1_0_1Cart f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.S1_0_1Cart f a20 ->
                 Main.$fSelectorCart3) -}
2e5cd959f65f4c62ff77392f7719f813
  $fSelectorCart1 :: GHC.Generics.Selector Main.S1_0_2Cart
  DFunId[0]
  {- Arity: 1, Strictness: <L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fSelectorCart1_$cselName
                  `cast`
                (Sym (GHC.Generics.NTCo:Selector[0] <Main.S1_0_2Cart>_N)) -}
2e5cd959f65f4c62ff77392f7719f813
  $fSelectorCart1_$cselName ::
    t Main.S1_0_2Cart f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.S1_0_2Cart f a20 ->
                 Main.$fSelectorCart4) -}
207eda532d2dcd832e7835eea485f48b
  $fSelectorCart2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "discount"#) -}
c4737046aa37f896e8ace56de2c8b51c
  $fSelectorCart3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "discountedItemIds"#) -}
499da0b0a9179e85f999347fdde5811b
  $fSelectorCart4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "cart"#) -}
6e28830a55af2c8c8bf62a44cf244fc7
  $fSelectorCart_$cselName ::
    t Main.S1_0_0Cart f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.S1_0_0Cart f a20 ->
                 Main.$fSelectorCart2) -}
4c7f7787f16848309578ad6355195cc7
  $fSelectorItem :: GHC.Generics.Selector Main.S1_0_0Item
  DFunId[0]
  {- Arity: 1, Strictness: <L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fSelectorItem_$cselName
                  `cast`
                (Sym (GHC.Generics.NTCo:Selector[0] <Main.S1_0_0Item>_N)) -}
44e0f3a62a6d5866b62b6e7ccca0fb84
  $fSelectorItem0 :: GHC.Generics.Selector Main.S1_0_1Item
  DFunId[0]
  {- Arity: 1, Strictness: <L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fSelectorItem0_$cselName
                  `cast`
                (Sym (GHC.Generics.NTCo:Selector[0] <Main.S1_0_1Item>_N)) -}
44e0f3a62a6d5866b62b6e7ccca0fb84
  $fSelectorItem0_$cselName ::
    t Main.S1_0_1Item f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.S1_0_1Item f a20 ->
                 Main.$fSelectorItem5) -}
a88ad27307bbcb0266b89d31bfbb33bb
  $fSelectorItem1 :: GHC.Generics.Selector Main.S1_0_2Item
  DFunId[0]
  {- Arity: 1, Strictness: <L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fSelectorItem1_$cselName
                  `cast`
                (Sym (GHC.Generics.NTCo:Selector[0] <Main.S1_0_2Item>_N)) -}
a88ad27307bbcb0266b89d31bfbb33bb
  $fSelectorItem1_$cselName ::
    t Main.S1_0_2Item f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.S1_0_2Item f a20 ->
                 Main.$fSelectorItem6) -}
103bdce46c53b14905eee20c497f1533
  $fSelectorItem2 :: GHC.Generics.Selector Main.S1_0_3Item
  DFunId[0]
  {- Arity: 1, Strictness: <L,A>, Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fSelectorItem2_$cselName
                  `cast`
                (Sym (GHC.Generics.NTCo:Selector[0] <Main.S1_0_3Item>_N)) -}
103bdce46c53b14905eee20c497f1533
  $fSelectorItem2_$cselName ::
    t Main.S1_0_3Item f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.S1_0_3Item f a20 ->
                 Main.$fSelectorItem7) -}
e5305bf5927d1ff9d65a9ae076b853b9
  $fSelectorItem4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "itemId"#) -}
6a326f4941a1760d33286e7b8d1c3046
  $fSelectorItem5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "desc"#) -}
ea9ad030e7c3bcf6cfbb1d224e352f0a
  $fSelectorItem6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pricePerUnit"#) -}
10dcab4d25c93f3ceeb0da88911f82c6
  $fSelectorItem7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "quantity"#) -}
4c7f7787f16848309578ad6355195cc7
  $fSelectorItem_$cselName ::
    t Main.S1_0_0Item f a -> [GHC.Types.Char]
  {- Arity: 1, Strictness: <L,A>,
     Unfolding: InlineRule (1, True, True)
                (\ @ (t :: * -> (* -> *) -> * -> *)
                   @ (f :: * -> *)
                   @ a20
                   ds :: t Main.S1_0_0Item f a20 ->
                 Main.$fSelectorItem4) -}
ab76cf51dded7f800606e6b0463503ba
  $fShowCart :: GHC.Show.Show Main.Cart
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Cart
                  Main.$fShowCart_$cshowsPrec
                  Main.$fShowCart_$cshow
                  Main.$fShowCart_$cshowList -}
ab76cf51dded7f800606e6b0463503ba
  $fShowCart1 :: Main.Cart -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: Main.Cart ->
                 case w of ww { Main.Cart ww1 ww2 ww3 ->
                 Main.$w$cshowsPrec 0 ww1 ww2 ww3 }) -}
ab76cf51dded7f800606e6b0463503ba
  $fShowCart_$cshow :: Main.Cart -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(1*U(U),U,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Main.Cart ->
                 Main.$fShowCart_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
ab76cf51dded7f800606e6b0463503ba
  $fShowCart_$cshowList :: [Main.Cart] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.Cart Main.$fShowCart1) -}
ab76cf51dded7f800606e6b0463503ba
  $fShowCart_$cshowsPrec ::
    GHC.Types.Int -> Main.Cart -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U(1*U(U),U,U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: Main.Cart ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Cart ww3 ww4 ww5 ->
                 Main.$w$cshowsPrec ww1 ww3 ww4 ww5 } }) -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fShowItem :: GHC.Show.Show Main.Item
  DFunId[0]
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun:.
                  @ Main.Item
                  Main.$fShowItem_$cshowsPrec
                  Main.$fShowItem_$cshow
                  Main.$fShowItem_$cshowList -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fShowItem1 :: Main.Item -> GHC.Show.ShowS
  {- Arity: 1,
     Unfolding: (\ w :: Main.Item ->
                 case w of ww { Main.Item ww1 ww2 ww3 ww4 ->
                 Main.$w$cshowsPrec1 0 ww1 ww2 ww3 ww4 }) -}
c001fdee5eefe3b31413fa10c11f1a8d
  $fShowItem2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "}"#) -}
d540aed03a470b262d5d7dc81b775f53
  $fShowItem3 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "quantity = "#) -}
333971d7736f42da684fa4e91f7e8c26
  $fShowItem4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "pricePerUnit = "#) -}
4b07ca9999160552b18b1e8896a92bc0
  $fShowItem5 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "desc = "#) -}
1f8fdd96c1d1162b4780ddb92865dde0
  $fShowItem6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# ", "#) -}
5543231ad005d4c96415fd7c0fbee81d
  $fShowItem7 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "itemId = "#) -}
99c76c326b501502de48affb07228e1f
  $fShowItem8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Item {"#) -}
4b836f32a4c1eda225497947b458ad21
  $fShowItem9 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 0) -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fShowItem_$cshow :: Main.Item -> GHC.Base.String
  {- Arity: 1, Strictness: <S,1*U(U,U,1*U(U),U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ x :: Main.Item ->
                 Main.$fShowItem_$cshowsPrec
                   GHC.Show.shows18
                   x
                   (GHC.Types.[] @ GHC.Types.Char)) -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fShowItem_$cshowList :: [Main.Item] -> GHC.Show.ShowS
  {- Arity: 2,
     Unfolding: (GHC.Show.showList__ @ Main.Item Main.$fShowItem1) -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fShowItem_$cshowsPrec ::
    GHC.Types.Int -> Main.Item -> GHC.Show.ShowS
  {- Arity: 2, Strictness: <S,1*U(U)><S,1*U(U,U,1*U(U),U(U))>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ w :: GHC.Types.Int w1 :: Main.Item ->
                 case w of ww { GHC.Types.I# ww1 ->
                 case w1 of ww2 { Main.Item ww3 ww4 ww5 ww6 ->
                 Main.$w$cshowsPrec1 ww1 ww3 ww4 ww5 ww6 } }) -}
ab76cf51dded7f800606e6b0463503ba
  $fToJSONCart :: Data.Aeson.Types.Class.ToJSON Main.Cart
  DFunId[0]
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U)>m1,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fToJSONCart_$ctoJSON
                  `cast`
                (Sym (Data.Aeson.Types.Class.NTCo:ToJSON[0] <Main.Cart>_N)) -}
aa2eb43d10a98093fd1603442af74eb3
  $fToJSONCart1 :: [Main.Item] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Main.Item] ->
                 case Main.$wa w of ww { (##) ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
41b6c7e27d4c4775b8ddbb4f121b8e63
  $fToJSONCart10 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Main.$fToJSONCart11
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Main.$fToJSONCart4
                   Main.$fSelectorItem5
                   0
                   ipv }) -}
b16a4afdfc51ddd4d9429215991d9d29
  $fToJSONCart11 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
94142fd08a94abfcc51041a62802e646
  $fToJSONCart12 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
d1cacd8afcefc2e1ae112eed64df7017
  $fToJSONCart13 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Main.$fToJSONCart14) -}
1c085be664a71173f2d4f1e8b932635b
  $fToJSONCart14 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Main.$fToJSONCart15
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Main.$fToJSONCart4
                   Main.$fSelectorItem4
                   0
                   ipv }) -}
61268df8daca752768610938c7526ea1
  $fToJSONCart15 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
bb84cfce6365380224735c3ab1534f01
  $fToJSONCart16 ::
    Data.Vector.Fusion.Stream.Monadic.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
56bc1370a43956cee9357e27ed32fd6f
  $fToJSONCart17 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Main.$fToJSONCart18) -}
b9cc65e817fec32e8bb58ae39a75cacd
  $fToJSONCart18 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Main.$fToJSONCart19
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Main.$fToJSONCart4
                   Main.$fSelectorCart4
                   0
                   ipv }) -}
036f692e19fe1c6c17b8561d98a4090b
  $fToJSONCart19 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
a355a8d36b81c047e44cf97db687a0cc
  $fToJSONCart2 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Main.$fToJSONCart3) -}
ce442785fa0f04dd34c2c720073832bb
  $fToJSONCart20 ::
    [[GHC.Types.Char]] -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U>m2, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [[GHC.Types.Char]] ->
                 case Main.$wa1 w of ww { (##) ww1 ->
                 Data.Aeson.Types.Internal.Array ww1 }) -}
af4d38d764d9776944b93bb67772999f
  $fToJSONCart21 ::
    Data.Vector.Fusion.Stream.Monadic.SPEC
    -> (Data.Vector.Generic.Base.Mutable
          Data.Vector.Vector
          (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
          Data.Aeson.Types.Internal.Value,
        GHC.Types.Int)
    -> [Data.Aeson.Types.Internal.Value]
    -> GHC.Prim.State# s
    -> (# GHC.Prim.State# s,
          (Data.Vector.Generic.Base.Mutable
             Data.Vector.Vector
             (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
             Data.Aeson.Types.Internal.Value,
           GHC.Types.Int) #)
  {- Arity: 4, Strictness: <S,1*U><L,U(U(U,U,U),U(U))><S,1*U><L,U> -}
9a93fae4405d3626b003c24c3bc7fe0b
  $fToJSONCart22 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Main.$fToJSONCart23) -}
468fa0a961e16cdf6c67dfbfb009644f
  $fToJSONCart23 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Main.$fToJSONCart24
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Main.$fToJSONCart4
                   Main.$fSelectorCart3
                   0
                   ipv }) -}
c5caa1cdab38dc4ff4e28710fa822883
  $fToJSONCart24 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
5b4e83f4164179ddb19df8de8b2bc85e
  $fToJSONCart25 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.S1
         Main.S1_0_0Cart (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float) a8
    -> [Data.Aeson.Types.Internal.Pair]
    -> [Data.Aeson.Types.Internal.Pair]
  {- Arity: 2, Strictness: <L,1*U(1*C1(U),A,A,A,A)><L,1*U(U)>,
     Unfolding: (\ @ a20
                   eta :: Data.Aeson.Types.Internal.Options
                   eta1 :: GHC.Generics.S1
                             Main.S1_0_0Cart
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float)
                             a20 ->
                 GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   (case eta of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ->
                    case ds1 Main.$fSelectorCart2 of dt { DEFAULT ->
                    GHC.ST.runSTRep
                      @ Data.Text.Internal.Text
                      (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                       case GHC.Prim.newByteArray# @ s1 8 s2 of ds7 { (#,#) ipv ipv1 ->
                       Main.$fToJSONCart26
                         @ s1
                         (Data.Text.Array.MArray @ s1 ipv1)
                         Main.$fToJSONCart4
                         dt
                         0
                         ipv }) } },
                    case eta1
                           `cast`
                         (Trans
                              (GHC.Generics.NTCo:M1[0]
                                   <GHC.Generics.S>_P
                                   <Main.S1_0_0Cart>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Types.Float>_R <a20>_N)
                              (GHC.Generics.NTCo:K1[0]
                                   <GHC.Generics.R>_P
                                   <GHC.Types.Float>_R
                                   <a20>_P)) of ds { GHC.Types.F# ds1 ->
                    case {__pkg_ccall base-4.8.1.0 isFloatNaN GHC.Prim.Float#
                                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    GHC.Prim.Int# #)}
                           ds1
                           GHC.Prim.realWorld# of wild { (#,#) ds2 ds3 ->
                    case ds3 of wild1 {
                      DEFAULT -> Data.Aeson.Types.Internal.Null
                      0
                      -> case {__pkg_ccall base-4.8.1.0 isFloatInfinite GHC.Prim.Float#
                                                                        -> GHC.Prim.State#
                                                                             GHC.Prim.RealWorld
                                                                        -> (# GHC.Prim.State#
                                                                                GHC.Prim.RealWorld,
                                                                              GHC.Prim.Int# #)}
                                ds1
                                GHC.Prim.realWorld# of wild2 { (#,#) ds4 ds5 ->
                         case ds5 of wild3 {
                           DEFAULT -> Data.Aeson.Types.Internal.Null
                           0
                           -> case Data.Scientific.$wfromFloatDigits
                                     @ GHC.Types.Float
                                     GHC.Float.$fRealFloatFloat
                                     ds of ww1 { (#,#) ww2 ww3 ->
                              Data.Aeson.Types.Internal.Number
                                (Data.Scientific.Scientific ww2 ww3) } } } } } })) -}
bee9a34dc0fc4c9aeb0c869840082757
  $fToJSONCart26 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
317e13a4ec92bdf4d8a931d2347208c7
  $fToJSONCart3 ::
    GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 1,
     Unfolding: (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                 case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                 Main.$fToJSONCart5
                   @ s1
                   (Data.Text.Array.MArray @ s1 ipv1)
                   Main.$fToJSONCart4
                   Main.$fSelectorItem7
                   0
                   ipv }) -}
92021ea298eddf3981dce34b0fc2534d
  $fToJSONCart4 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 4) -}
99349b5965824ad0e71fe5d038ecb8eb
  $fToJSONCart5 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
51286bac739e3001f6d2a962f4ff4d4a
  $fToJSONCart6 ::
    Data.Aeson.Types.Internal.Options
    -> GHC.Generics.S1
         Main.S1_0_2Item (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float) a8
    -> [Data.Aeson.Types.Internal.Pair]
    -> [Data.Aeson.Types.Internal.Pair]
  {- Arity: 2, Strictness: <L,1*U(1*C1(U),A,A,A,A)><L,1*U(U)>,
     Unfolding: (\ @ a20
                   eta :: Data.Aeson.Types.Internal.Options
                   eta1 :: GHC.Generics.S1
                             Main.S1_0_2Item
                             (GHC.Generics.K1 GHC.Generics.R GHC.Types.Float)
                             a20 ->
                 GHC.Types.:
                   @ Data.Aeson.Types.Internal.Pair
                   (case eta of wild { Data.Aeson.Types.Internal.Options ds1 ds2 ds3 ds4 ds5 ->
                    case ds1 Main.$fSelectorItem6 of dt { DEFAULT ->
                    GHC.ST.runSTRep
                      @ Data.Text.Internal.Text
                      (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                       case GHC.Prim.newByteArray# @ s1 8 s2 of ds7 { (#,#) ipv ipv1 ->
                       Main.$fToJSONCart7
                         @ s1
                         (Data.Text.Array.MArray @ s1 ipv1)
                         Main.$fToJSONCart4
                         dt
                         0
                         ipv }) } },
                    case eta1
                           `cast`
                         (Trans
                              (GHC.Generics.NTCo:M1[0]
                                   <GHC.Generics.S>_P
                                   <Main.S1_0_2Item>_P
                                   <GHC.Generics.K1 GHC.Generics.R GHC.Types.Float>_R <a20>_N)
                              (GHC.Generics.NTCo:K1[0]
                                   <GHC.Generics.R>_P
                                   <GHC.Types.Float>_R
                                   <a20>_P)) of ds { GHC.Types.F# ds1 ->
                    case {__pkg_ccall base-4.8.1.0 isFloatNaN GHC.Prim.Float#
                                                              -> GHC.Prim.State# GHC.Prim.RealWorld
                                                              -> (# GHC.Prim.State#
                                                                      GHC.Prim.RealWorld,
                                                                    GHC.Prim.Int# #)}
                           ds1
                           GHC.Prim.realWorld# of wild { (#,#) ds2 ds3 ->
                    case ds3 of wild1 {
                      DEFAULT -> Data.Aeson.Types.Internal.Null
                      0
                      -> case {__pkg_ccall base-4.8.1.0 isFloatInfinite GHC.Prim.Float#
                                                                        -> GHC.Prim.State#
                                                                             GHC.Prim.RealWorld
                                                                        -> (# GHC.Prim.State#
                                                                                GHC.Prim.RealWorld,
                                                                              GHC.Prim.Int# #)}
                                ds1
                                GHC.Prim.realWorld# of wild2 { (#,#) ds4 ds5 ->
                         case ds5 of wild3 {
                           DEFAULT -> Data.Aeson.Types.Internal.Null
                           0
                           -> case Data.Scientific.$wfromFloatDigits
                                     @ GHC.Types.Float
                                     GHC.Float.$fRealFloatFloat
                                     ds of ww1 { (#,#) ww2 ww3 ->
                              Data.Aeson.Types.Internal.Number
                                (Data.Scientific.Scientific ww2 ww3) } } } } } })) -}
4e3dd5bd92c72e0f869707ec8e3488d4
  $fToJSONCart7 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
b2f166f2e9538e0fe878e6bc5160a5b8
  $fToJSONCart8 ::
    Data.Text.Array.MArray s1
    -> GHC.Types.Int
    -> [GHC.Types.Char]
    -> GHC.Prim.Int#
    -> GHC.Prim.State# s1
    -> (# GHC.Prim.State# s1, Data.Text.Internal.Text #)
  {- Arity: 5, Strictness: <L,U(U)><L,U(U)><S,1*U><L,U><L,U>,
     Inline: [0] -}
71df6d0538a9abfdd39273c4f83fa5f4
  $fToJSONCart9 :: Data.Text.Internal.Text
  {- Unfolding: (GHC.ST.runSTRep
                   @ Data.Text.Internal.Text
                   Main.$fToJSONCart10) -}
ab76cf51dded7f800606e6b0463503ba
  $fToJSONCart_$ctoJSON ::
    Main.Cart -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U(U),1*U,1*U)>m1,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Main.Cart ->
                 case w of ww { Main.Cart ww1 ww2 ww3 ->
                 case Main.$w$ctoJSON ww1 ww2 ww3 of ww4 { (##) ww5 ->
                 Data.Aeson.Types.Internal.Object ww5 } }) -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fToJSONCart_$ctoJSON1 ::
    Main.Item -> Data.Aeson.Types.Internal.Value
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U(U),1*U(U))>m1,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: Main.Item ->
                 case w of ww { Main.Item ww1 ww2 ww3 ww4 ->
                 case Main.$w$ctoJSON1 ww1 ww2 ww3 ww4 of ww5 { (##) ww6 ->
                 Data.Aeson.Types.Internal.Object ww6 } }) -}
fb126243d1dff12f8b5ac1cf348a7afc
  $fToJSONItem :: Data.Aeson.Types.Class.ToJSON Main.Item
  DFunId[0]
  {- Arity: 1, Strictness: <S,1*U(1*U,1*U,1*U(U),1*U(U))>m1,
     Inline: INLINE (sat-args=0),
     Unfolding: InlineRule (0, False, True)
                Main.$fToJSONCart_$ctoJSON1
                  `cast`
                (Sym (Data.Aeson.Types.Class.NTCo:ToJSON[0] <Main.Item>_N)) -}
a8179ac4dd85a600449d096662f7d854
  $s$gdmparseJSON28 ::
    Data.Aeson.Types.Internal.Failure f r
    -> Data.Aeson.Types.Internal.Success [Main.Item] f r -> f r
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (f :: * -> *)
                   @ r
                   _kf :: Data.Aeson.Types.Internal.Failure f r
                   ks :: Data.Aeson.Types.Internal.Success [Main.Item] f r ->
                 ks (GHC.Types.[] @ Main.Item)) -}
7ec7ab27bb0834f28ce7865d23a19683
  $s$gdmparseJSON29 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "[a]"#) -}
4fbd10514921d56d48d37c4be65ed7eb
  $s$gdmparseJSON34 ::
    Data.Aeson.Types.Internal.Failure f r
    -> Data.Aeson.Types.Internal.Success [[GHC.Types.Char]] f r -> f r
  {- Arity: 2, HasNoCafRefs, Strictness: <L,A><C(S),1*C1(U)>,
     Unfolding: InlineRule (2, True, True)
                (\ @ (f :: * -> *)
                   @ r
                   _kf :: Data.Aeson.Types.Internal.Failure f r
                   ks :: Data.Aeson.Types.Internal.Success [[GHC.Types.Char]] f r ->
                 ks (GHC.Types.[] @ [GHC.Types.Char])) -}
70c48b85e6c24301ce1dd8f1ccf6c5a9
  $s$gdmparseJSON35 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "String"#) -}
87c6a26707d5815802c566f624fcd455
  $w$cshowsPrec ::
    GHC.Prim.Int#
    -> GHC.Types.Float
    -> Main.DiscountedItems
    -> [Main.Item]
    -> GHC.Show.ShowS
  {- Arity: 4, Strictness: <L,U><L,1*U(U)><L,U><L,U>, Inline: [0] -}
c3c2bb7d5c86dfde029fa5b043988239
  $w$cshowsPrec1 ::
    GHC.Prim.Int#
    -> GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Float
    -> GHC.Types.Int
    -> GHC.Show.ShowS
  {- Arity: 5, Strictness: <L,U><L,U><L,U><L,1*U(U)><L,U(U)>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Base.String
                   ww3 :: GHC.Types.Float
                   ww4 :: GHC.Types.Int ->
                 let {
                   f :: GHC.Base.String -> GHC.Base.String
                   = case ww3 of ww5 { GHC.Types.F# ww6 ->
                     GHC.Float.$w$sshowSignedFloat1
                       GHC.Float.$fShowFloat_$sshowFloat
                       Main.$fShowItem9
                       ww6 }
                 } in
                 let {
                   p :: GHC.Show.ShowS {- Arity: 1, Strictness: <L,1*U> -}
                   = \ x :: GHC.Base.String ->
                     GHC.Base.++
                       @ GHC.Types.Char
                       Main.$fShowItem8
                       (GHC.Base.++
                          @ GHC.Types.Char
                          Main.$fShowItem7
                          (GHC.Types.:
                             @ GHC.Types.Char
                             GHC.Show.shows6
                             (GHC.Show.showLitString
                                ww1
                                (GHC.Types.:
                                   @ GHC.Types.Char
                                   GHC.Show.shows6
                                   (GHC.Base.++
                                      @ GHC.Types.Char
                                      Main.$fShowItem6
                                      (GHC.Base.++
                                         @ GHC.Types.Char
                                         Main.$fShowItem5
                                         (GHC.Types.:
                                            @ GHC.Types.Char
                                            GHC.Show.shows6
                                            (GHC.Show.showLitString
                                               ww2
                                               (GHC.Types.:
                                                  @ GHC.Types.Char
                                                  GHC.Show.shows6
                                                  (GHC.Base.++
                                                     @ GHC.Types.Char
                                                     Main.$fShowItem6
                                                     (GHC.Base.++
                                                        @ GHC.Types.Char
                                                        Main.$fShowItem4
                                                        (f (GHC.Base.++
                                                              @ GHC.Types.Char
                                                              Main.$fShowItem6
                                                              (GHC.Base.++
                                                                 @ GHC.Types.Char
                                                                 Main.$fShowItem3
                                                                 (case ww4 of ww5 { GHC.Types.I# ww6 ->
                                                                  case GHC.Show.$wshowSignedInt
                                                                         0
                                                                         ww6
                                                                         (GHC.Base.++
                                                                            @ GHC.Types.Char
                                                                            Main.$fShowItem2
                                                                            x) of ww7 { (#,#) ww8 ww9 ->
                                                                  GHC.Types.:
                                                                    @ GHC.Types.Char
                                                                    ww8
                                                                    ww9 } })))))))))))))))
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11) of wild {
                   GHC.Types.False -> p
                   GHC.Types.True
                   -> \ x :: GHC.Base.String ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows9
                        (p (GHC.Types.: @ GHC.Types.Char GHC.Show.shows8 x)) }) -}
647c9d70abb772100b064794ec33ff9b
  $w$ctoJSON ::
    GHC.Types.Float
    -> Main.DiscountedItems
    -> [Main.Item]
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 3, Strictness: <L,1*U(U)><L,1*U><L,1*U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Types.Float
                   ww1 :: Main.DiscountedItems
                   ww2 :: [Main.Item] ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (Main.$fToJSONCart25
                           @ GHC.Prim.Any
                           Data.Aeson.Types.Internal.defaultOptions
                           ww
                             `cast`
                           (Trans
                                (Sym (GHC.Generics.NTCo:K1[0]
                                          <GHC.Generics.R>_P <GHC.Types.Float>_R <GHC.Prim.Any>_P))
                                (Sym (GHC.Generics.NTCo:M1[0]
                                          <GHC.Generics.S>_P
                                          <Main.S1_0_0Cart>_P
                                          <GHC.Generics.K1
                                             GHC.Generics.R GHC.Types.Float>_R) <GHC.Prim.Any>_N))
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Main.$fToJSONCart22, Main.$fToJSONCart20 ww1)
                              (GHC.Types.:
                                 @ Data.Aeson.Types.Internal.Pair
                                 (Main.$fToJSONCart17, Main.$fToJSONCart1 ww2)
                                 (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
ac19afd0387e3894eecaf8033af240c1
  $w$ctoJSON1 ::
    GHC.Base.String
    -> GHC.Base.String
    -> GHC.Types.Float
    -> GHC.Types.Int
    -> (# Data.Aeson.Types.Internal.Object #)
  {- Arity: 4, Strictness: <L,1*U><L,1*U><L,1*U(U)><L,1*U(U)>,
     Inline: [0],
     Unfolding: (\ ww :: GHC.Base.String
                   ww1 :: GHC.Base.String
                   ww2 :: GHC.Types.Float
                   ww3 :: GHC.Types.Int ->
                 case Data.Aeson.Types.Internal.$sfromList1
                        @ Data.Aeson.Types.Internal.Value
                        (GHC.Types.:
                           @ Data.Aeson.Types.Internal.Pair
                           (Main.$fToJSONCart13,
                            case GHC.ST.runSTRep
                                   @ Data.Text.Internal.Text
                                   (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                                    case GHC.Prim.newByteArray# @ s1 8 s2 of ds1 { (#,#) ipv ipv1 ->
                                    Main.$fToJSONCart12
                                      @ s1
                                      (Data.Text.Array.MArray @ s1 ipv1)
                                      Main.$fToJSONCart4
                                      ww
                                      0
                                      ipv }) of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                            Data.Aeson.Types.Internal.String dt })
                           (GHC.Types.:
                              @ Data.Aeson.Types.Internal.Pair
                              (Main.$fToJSONCart9,
                               case GHC.ST.runSTRep
                                      @ Data.Text.Internal.Text
                                      (\ @ s1 s2 :: GHC.Prim.State# s1[OneShot] ->
                                       case GHC.Prim.newByteArray#
                                              @ s1
                                              8
                                              s2 of ds1 { (#,#) ipv ipv1 ->
                                       Main.$fToJSONCart8
                                         @ s1
                                         (Data.Text.Array.MArray @ s1 ipv1)
                                         Main.$fToJSONCart4
                                         ww1
                                         0
                                         ipv }) of dt { Data.Text.Internal.Text ipv ipv1 ipv2 ->
                               Data.Aeson.Types.Internal.String dt })
                              (Main.$fToJSONCart6
                                 @ GHC.Prim.Any
                                 Data.Aeson.Types.Internal.defaultOptions
                                 ww2
                                   `cast`
                                 (Trans
                                      (Sym (GHC.Generics.NTCo:K1[0]
                                                <GHC.Generics.R>_P
                                                <GHC.Types.Float>_R
                                                <GHC.Prim.Any>_P))
                                      (Sym (GHC.Generics.NTCo:M1[0]
                                                <GHC.Generics.S>_P
                                                <Main.S1_0_2Item>_P
                                                <GHC.Generics.K1
                                                   GHC.Generics.R
                                                   GHC.Types.Float>_R) <GHC.Prim.Any>_N))
                                 (GHC.Types.:
                                    @ Data.Aeson.Types.Internal.Pair
                                    (Main.$fToJSONCart2,
                                     case ww3 of wild { GHC.Types.I# i ->
                                     case GHC.Integer.Type.smallInteger i of dt { DEFAULT ->
                                     Data.Aeson.Types.Internal.Number
                                       (Data.Scientific.Scientific dt 0) } })
                                    (GHC.Types.[] @ Data.Aeson.Types.Internal.Pair)))))
                        (Data.HashMap.Base.Empty
                           @ Data.Text.Internal.Text
                           @ Data.Aeson.Types.Internal.Value) of dt { DEFAULT ->
                 (# dt #) }) -}
cf7c24ba0f56272671acc79dd01e149f
  $wa :: [Main.Item] -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [Main.Item] ->
                 case GHC.ST.runSTRep
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                0
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case Main.$fToJSONCart16
                                @ s
                                Data.Vector.Fusion.Stream.Monadic.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                    @ Data.Aeson.Types.Internal.Value
                                    0
                                    0
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                     (GHC.ST.ST
                                                                                        s)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 Main.$fShowItem9)
                                (GHC.Base.map
                                   @ Main.Item
                                   @ Data.Aeson.Types.Internal.Value
                                   Main.$fToJSONCart_$ctoJSON1
                                   w)
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N))_R of ds2 { (#,#) ipv5 ipv6 ->
                         case ipv6 of wild2 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                            (GHC.ST.ST
                                                                               s)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv5
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of dt { Data.Vector.Vector ipv ipv1 ipv2 ->
                 (# dt #) }) -}
e1e0e1bf7cea4343bb44db9bc271e0ed
  $wa1 :: [[GHC.Types.Char]] -> (# Data.Aeson.Types.Internal.Array #)
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0],
     Unfolding: (\ w :: [[GHC.Types.Char]] ->
                 case GHC.ST.runSTRep
                        @ (Data.Vector.Vector Data.Aeson.Types.Internal.Value)
                        (\ @ s s1 :: GHC.Prim.State# s[OneShot] ->
                         case GHC.Prim.newArray#
                                @ Data.Aeson.Types.Internal.Value
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                0
                                (Data.Vector.Mutable.uninitialised
                                   @ Data.Aeson.Types.Internal.Value)
                                s1
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds1 { (#,#) ipv ipv1 ->
                         case Main.$fToJSONCart21
                                @ s
                                Data.Vector.Fusion.Stream.Monadic.SPEC
                                ((Data.Vector.Mutable.MVector
                                    @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                    @ Data.Aeson.Types.Internal.Value
                                    0
                                    0
                                    ipv1)
                                   `cast`
                                 (Sub (Sym (Data.Vector.TFCo:R:MutableVector[0])) <Control.Monad.Primitive.PrimState
                                                                                     (GHC.ST.ST
                                                                                        s)>_N <Data.Aeson.Types.Internal.Value>_N),
                                 Main.$fShowItem9)
                                (GHC.Base.map
                                   @ [GHC.Types.Char]
                                   @ Data.Aeson.Types.Internal.Value
                                   Data.Aeson.Types.Instances.$fToJSON[]0_$ctoJSON
                                   w)
                                ipv
                                  `cast`
                                (GHC.Prim.State#
                                   (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                        <s>_N))_R of ds2 { (#,#) ipv5 ipv6 ->
                         case ipv6 of wild2 { (,) v' n ->
                         case v'
                                `cast`
                              (Sub (Data.Vector.TFCo:R:MutableVector[0]) <Control.Monad.Primitive.PrimState
                                                                            (GHC.ST.ST
                                                                               s)>_N <Data.Aeson.Types.Internal.Value>_N) of wild { Data.Vector.Mutable.MVector dt dt1 dt2 ->
                         case n of dt5 { GHC.Types.I# dt6 ->
                         case GHC.Prim.unsafeFreezeArray#
                                @ (Control.Monad.Primitive.PrimState (GHC.ST.ST s))
                                @ Data.Aeson.Types.Internal.Value
                                dt2
                                ipv5
                                  `cast`
                                (GHC.Prim.State#
                                   (Sym (Control.Monad.Primitive.TFCo:R:PrimStateST[0]
                                             <s>_N)))_R of ds4 { (#,#) ipv2 ipv3 ->
                         (# ipv2
                              `cast`
                            (GHC.Prim.State#
                               (Control.Monad.Primitive.TFCo:R:PrimStateST[0] <s>_N))_R,
                            Data.Vector.Vector
                              @ Data.Aeson.Types.Internal.Value
                              dt
                              dt6
                              ipv3 #) } } } } } }) of dt { Data.Vector.Vector ipv ipv1 ipv2 ->
                 (# dt #) }) -}
118be22b5a7f282349778dad7c50d950
  $wa2 ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [Main.Item]
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Array# Data.Aeson.Types.Internal.Value ->
                 letrec {
                   $wgo :: GHC.Prim.Int#
                           -> Data.Aeson.Types.Internal.Parser [Main.Item]
                     {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                   = \ ww3 :: GHC.Prim.Int# ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild1 {
                       GHC.Types.False
                       -> let {
                            r :: Data.Aeson.Types.Internal.Parser [Main.Item]
                            = $wgo (GHC.Prim.+# ww3 1)
                          } in
                          let {
                            a20 :: Data.Aeson.Types.Internal.Parser
                                     (GHC.Generics.M1
                                        GHC.Generics.D
                                        Main.D1Item
                                        (GHC.Generics.M1
                                           GHC.Generics.C
                                           Main.C1_0Item
                                           ((GHC.Generics.S1
                                               Main.S1_0_0Item (GHC.Generics.Rec0 GHC.Base.String)
                                             GHC.Generics.:*: GHC.Generics.S1
                                                                Main.S1_0_1Item
                                                                (GHC.Generics.Rec0 GHC.Base.String))
                                            GHC.Generics.:*: (GHC.Generics.S1
                                                                Main.S1_0_2Item
                                                                (GHC.Generics.Rec0 GHC.Types.Float)
                                                              GHC.Generics.:*: GHC.Generics.S1
                                                                                 Main.S1_0_3Item
                                                                                 (GHC.Generics.Rec0
                                                                                    GHC.Types.Int))))
                                        GHC.Prim.Any)
                            = case GHC.Prim.indexArray#
                                     @ Data.Aeson.Types.Internal.Value
                                     ww2
                                     (GHC.Prim.+# ww ww3) of ds2 { (##) ipv ->
                              Main.$fFromJSONItem1 ipv }
                          } in
                          (\ @ (f :: * -> *)
                             @ r1
                             kf :: Data.Aeson.Types.Internal.Failure f r1
                             ks :: Data.Aeson.Types.Internal.Success [Main.Item] f r1 ->
                           a20
                             `cast`
                           (Data.Aeson.Types.Internal.NTCo:Parser[0]
                                (Sub (Sym (Main.Rep_Item[0])) <GHC.Prim.Any>_N))
                             @ f
                             @ r1
                             kf
                             (\ a29 :: GHC.Generics.Rep Main.Item GHC.Prim.Any ->
                              let {
                                a62 :: Main.Item
                                = case a29
                                         `cast`
                                       (Trans
                                            (Sub (Main.Rep_Item[0]))
                                            (Trans
                                                 (GHC.Generics.NTCo:M1[0]
                                                      <GHC.Generics.D>_P
                                                      <Main.D1Item>_P
                                                      <GHC.Generics.M1
                                                         GHC.Generics.C
                                                         Main.C1_0Item
                                                         ((GHC.Generics.M1
                                                             GHC.Generics.S
                                                             Main.S1_0_0Item
                                                             (GHC.Generics.K1
                                                                GHC.Generics.R GHC.Base.String)
                                                           GHC.Generics.:*: GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              Main.S1_0_1Item
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Base.String))
                                                          GHC.Generics.:*: (GHC.Generics.M1
                                                                              GHC.Generics.S
                                                                              Main.S1_0_2Item
                                                                              (GHC.Generics.K1
                                                                                 GHC.Generics.R
                                                                                 GHC.Types.Float)
                                                                            GHC.Generics.:*: GHC.Generics.M1
                                                                                               GHC.Generics.S
                                                                                               Main.S1_0_3Item
                                                                                               (GHC.Generics.K1
                                                                                                  GHC.Generics.R
                                                                                                  GHC.Types.Int)))>_R)
                                                 (GHC.Generics.NTCo:M1[0]
                                                      <GHC.Generics.C>_P
                                                      <Main.C1_0Item>_P
                                                      <(GHC.Generics.M1
                                                          GHC.Generics.S
                                                          Main.S1_0_0Item
                                                          (GHC.Generics.K1
                                                             GHC.Generics.R GHC.Base.String)
                                                        GHC.Generics.:*: GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           Main.S1_0_1Item
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              GHC.Base.String))
                                                       GHC.Generics.:*: (GHC.Generics.M1
                                                                           GHC.Generics.S
                                                                           Main.S1_0_2Item
                                                                           (GHC.Generics.K1
                                                                              GHC.Generics.R
                                                                              GHC.Types.Float)
                                                                         GHC.Generics.:*: GHC.Generics.M1
                                                                                            GHC.Generics.S
                                                                                            Main.S1_0_3Item
                                                                                            (GHC.Generics.K1
                                                                                               GHC.Generics.R
                                                                                               GHC.Types.Int))>_R)) <GHC.Prim.Any>_N) of wild { GHC.Generics.:*: ds ds1 ->
                                  case ds of wild2 { GHC.Generics.:*: ds2 ds3 ->
                                  case ds1 of wild3 { GHC.Generics.:*: ds4 ds5 ->
                                  Main.Item
                                    ds2
                                      `cast`
                                    (Trans
                                         (GHC.Generics.NTCo:M1[0]
                                              <GHC.Generics.S>_P
                                              <Main.S1_0_0Item>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                                         (GHC.Generics.NTCo:K1[0]
                                              <GHC.Generics.R>_P
                                              <GHC.Base.String>_R
                                              <GHC.Prim.Any>_P))
                                    ds3
                                      `cast`
                                    (Trans
                                         (GHC.Generics.NTCo:M1[0]
                                              <GHC.Generics.S>_P
                                              <Main.S1_0_1Item>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Base.String>_R <GHC.Prim.Any>_N)
                                         (GHC.Generics.NTCo:K1[0]
                                              <GHC.Generics.R>_P
                                              <GHC.Base.String>_R
                                              <GHC.Prim.Any>_P))
                                    ds4
                                      `cast`
                                    (Trans
                                         (GHC.Generics.NTCo:M1[0]
                                              <GHC.Generics.S>_P
                                              <Main.S1_0_2Item>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Types.Float>_R <GHC.Prim.Any>_N)
                                         (GHC.Generics.NTCo:K1[0]
                                              <GHC.Generics.R>_P
                                              <GHC.Types.Float>_R
                                              <GHC.Prim.Any>_P))
                                    ds5
                                      `cast`
                                    (Trans
                                         (GHC.Generics.NTCo:M1[0]
                                              <GHC.Generics.S>_P
                                              <Main.S1_0_3Item>_P
                                              <GHC.Generics.K1
                                                 GHC.Generics.R GHC.Types.Int>_R <GHC.Prim.Any>_N)
                                         (GHC.Generics.NTCo:K1[0]
                                              <GHC.Generics.R>_P
                                              <GHC.Types.Int>_R
                                              <GHC.Prim.Any>_P)) } } }
                              } in
                              r `cast` (Data.Aeson.Types.Internal.NTCo:Parser[0] <[Main.Item]>_R)
                                @ f
                                @ r1
                                kf
                                (\ a63 :: [Main.Item] -> ks (GHC.Types.: @ Main.Item a62 a63))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.NTCo:Parser[0] <[Main.Item]>_R))
                       GHC.Types.True
                       -> Main.$s$gdmparseJSON28
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.NTCo:Parser[0] <[Main.Item]>_R)) }
                 } in
                 $wgo 0) -}
1308489266bbc900a3e9e652efe214d2
  $wa3 ::
    GHC.Prim.Int#
    -> GHC.Prim.Int#
    -> GHC.Prim.Array# Data.Aeson.Types.Internal.Value
    -> Data.Aeson.Types.Internal.Parser [[GHC.Types.Char]]
  {- Arity: 3, Strictness: <L,U><L,U><L,U>, Inline: [0],
     Unfolding: (\ ww :: GHC.Prim.Int#
                   ww1 :: GHC.Prim.Int#
                   ww2 :: GHC.Prim.Array# Data.Aeson.Types.Internal.Value ->
                 letrec {
                   $wgo :: GHC.Prim.Int#
                           -> Data.Aeson.Types.Internal.Parser [[GHC.Types.Char]]
                     {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                   = \ ww3 :: GHC.Prim.Int# ->
                     case GHC.Prim.tagToEnum#
                            @ GHC.Types.Bool
                            (GHC.Prim.>=# ww3 ww1) of wild1 {
                       GHC.Types.False
                       -> let {
                            r :: Data.Aeson.Types.Internal.Parser [[GHC.Types.Char]]
                            = $wgo (GHC.Prim.+# ww3 1)
                          } in
                          let {
                            m :: Data.Aeson.Types.Internal.Parser [GHC.Types.Char]
                            = case GHC.Prim.indexArray#
                                     @ Data.Aeson.Types.Internal.Value
                                     ww2
                                     (GHC.Prim.+# ww ww3) of ds2 { (##) ipv ->
                              case ipv of wild {
                                DEFAULT
                                -> Data.Aeson.Types.Instances.typeMismatch
                                     @ GHC.Base.String
                                     Main.$s$gdmparseJSON35
                                     wild
                                Data.Aeson.Types.Internal.String txt
                                -> case txt of wild2 { Data.Text.Internal.Text dt dt1 dt2 ->
                                   let {
                                     a20 :: GHC.Base.String
                                     = let {
                                         a21 :: GHC.Prim.Int# = GHC.Prim.+# dt1 dt2
                                       } in
                                       letrec {
                                         $wunfold :: GHC.Prim.Int# -> [GHC.Types.Char]
                                           {- Arity: 1, Strictness: <L,U>, Inline: [0] -}
                                         = \ ww4 :: GHC.Prim.Int# ->
                                           case GHC.Prim.tagToEnum#
                                                  @ GHC.Types.Bool
                                                  (GHC.Prim.>=# ww4 a21) of wild3 {
                                             GHC.Types.False
                                             -> case GHC.Prim.indexWord16Array#
                                                       dt
                                                       ww4 of r# { DEFAULT ->
                                                case GHC.Prim.tagToEnum#
                                                       @ GHC.Types.Bool
                                                       (GHC.Prim.geWord# r# __word 55296) of wild4 {
                                                  GHC.Types.False
                                                  -> GHC.Types.:
                                                       @ GHC.Types.Char
                                                       (GHC.Types.C#
                                                          (GHC.Prim.chr# (GHC.Prim.word2Int# r#)))
                                                       ($wunfold (GHC.Prim.+# ww4 1))
                                                  GHC.Types.True
                                                  -> case GHC.Prim.tagToEnum#
                                                            @ GHC.Types.Bool
                                                            (GHC.Prim.leWord#
                                                               r#
                                                               __word 56319) of wild5 {
                                                       GHC.Types.False
                                                       -> GHC.Types.:
                                                            @ GHC.Types.Char
                                                            (GHC.Types.C#
                                                               (GHC.Prim.chr#
                                                                  (GHC.Prim.word2Int# r#)))
                                                            ($wunfold (GHC.Prim.+# ww4 1))
                                                       GHC.Types.True
                                                       -> case GHC.Prim.indexWord16Array#
                                                                 dt
                                                                 (GHC.Prim.+#
                                                                    ww4
                                                                    1) of r#1 { DEFAULT ->
                                                          GHC.Types.:
                                                            @ GHC.Types.Char
                                                            (GHC.Types.C#
                                                               (GHC.Prim.chr#
                                                                  (GHC.Prim.+#
                                                                     (GHC.Prim.+#
                                                                        (GHC.Prim.uncheckedIShiftL#
                                                                           (GHC.Prim.-#
                                                                              (GHC.Prim.word2Int#
                                                                                 r#)
                                                                              55296)
                                                                           10)
                                                                        (GHC.Prim.-#
                                                                           (GHC.Prim.word2Int# r#1)
                                                                           56320))
                                                                     65536)))
                                                            ($wunfold (GHC.Prim.+# ww4 2)) } } } }
                                             GHC.Types.True -> GHC.Types.[] @ GHC.Types.Char }
                                       } in
                                       $wunfold dt1
                                   } in
                                   (\ @ (f :: * -> *)
                                      @ r1
                                      _kf :: Data.Aeson.Types.Internal.Failure f r1
                                      ks :: Data.Aeson.Types.Internal.Success
                                              GHC.Base.String f r1 ->
                                    ks a20)
                                     `cast`
                                   (Sym (Data.Aeson.Types.Internal.NTCo:Parser[0]
                                             <GHC.Base.String>_R)) } } }
                          } in
                          (\ @ (f :: * -> *)
                             @ r1
                             kf :: Data.Aeson.Types.Internal.Failure f r1
                             ks :: Data.Aeson.Types.Internal.Success [[GHC.Types.Char]] f r1 ->
                           m `cast`
                           (Data.Aeson.Types.Internal.NTCo:Parser[0] <[GHC.Types.Char]>_R)
                             @ f
                             @ r1
                             kf
                             (\ a62 :: [GHC.Types.Char] ->
                              r `cast`
                              (Data.Aeson.Types.Internal.NTCo:Parser[0] <[[GHC.Types.Char]]>_R)
                                @ f
                                @ r1
                                kf
                                (\ a63 :: [[GHC.Types.Char]] ->
                                 ks (GHC.Types.: @ [GHC.Types.Char] a62 a63))))
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.NTCo:Parser[0]
                                    <[[GHC.Types.Char]]>_R))
                       GHC.Types.True
                       -> Main.$s$gdmparseJSON34
                            `cast`
                          (Sym (Data.Aeson.Types.Internal.NTCo:Parser[0]
                                    <[[GHC.Types.Char]]>_R)) }
                 } in
                 $wgo 0) -}
b05e35e7da9d64fb66de447bf15294f2
  $wcalc_total :: [Main.Item] -> GHC.Prim.Float#
  {- Arity: 1, Strictness: <S,1*U>, Inline: [0] -}
84eb0b5b09a1b6b79796e8a12fc81577
  abstract(True) C1_0Cart
6f7babb77a91596be120eaa97df8d814
  abstract(True) C1_0Item
ab76cf51dded7f800606e6b0463503ba
  data Cart
    = Cart {discount :: GHC.Types.Float,
            discountedItemIds :: Main.DiscountedItems,
            cart :: [Main.Item]}
d44482af14617148901f087ae5698d7b
  abstract(True) D1Cart
ecadfdca88f691c30af83aa73ec6c21e
  abstract(True) D1Item
ecf2927d7d2b56114811c9ef94315918
  type DiscountedItems = [GHC.Base.String]
fb126243d1dff12f8b5ac1cf348a7afc
  data Item
    = Item {itemId :: GHC.Base.String,
            desc :: GHC.Base.String,
            pricePerUnit :: GHC.Types.Float,
            quantity :: GHC.Types.Int}
ab76cf51dded7f800606e6b0463503ba
  axiom Rep_Cart::
      GHC.Generics.Rep Main.Cart
        = GHC.Generics.D1
            Main.D1Cart
            (GHC.Generics.C1
               Main.C1_0Cart
               (GHC.Generics.S1
                  Main.S1_0_0Cart (GHC.Generics.Rec0 GHC.Types.Float)
                GHC.Generics.:*: (GHC.Generics.S1
                                    Main.S1_0_1Cart (GHC.Generics.Rec0 Main.DiscountedItems)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     Main.S1_0_2Cart
                                                     (GHC.Generics.Rec0 [Main.Item]))))
fb126243d1dff12f8b5ac1cf348a7afc
  axiom Rep_Item::
      GHC.Generics.Rep Main.Item
        = GHC.Generics.D1
            Main.D1Item
            (GHC.Generics.C1
               Main.C1_0Item
               ((GHC.Generics.S1
                   Main.S1_0_0Item (GHC.Generics.Rec0 GHC.Base.String)
                 GHC.Generics.:*: GHC.Generics.S1
                                    Main.S1_0_1Item (GHC.Generics.Rec0 GHC.Base.String))
                GHC.Generics.:*: (GHC.Generics.S1
                                    Main.S1_0_2Item (GHC.Generics.Rec0 GHC.Types.Float)
                                  GHC.Generics.:*: GHC.Generics.S1
                                                     Main.S1_0_3Item
                                                     (GHC.Generics.Rec0 GHC.Types.Int))))
6e28830a55af2c8c8bf62a44cf244fc7
  abstract(True) S1_0_0Cart
4c7f7787f16848309578ad6355195cc7
  abstract(True) S1_0_0Item
77f62e5aa49cd46b809a5e2d4e89f9c6
  abstract(True) S1_0_1Cart
44e0f3a62a6d5866b62b6e7ccca0fb84
  abstract(True) S1_0_1Item
2e5cd959f65f4c62ff77392f7719f813
  abstract(True) S1_0_2Cart
a88ad27307bbcb0266b89d31bfbb33bb
  abstract(True) S1_0_2Item
103bdce46c53b14905eee20c497f1533
  abstract(True) S1_0_3Item
584ac5cd538cc2dd6b44b1d009be20ad
  calc_total :: [Main.Item] -> GHC.Types.Float
  {- Arity: 1, Strictness: <S,1*U>m, Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ w :: [Main.Item] ->
                 case Main.$wcalc_total w of ww { DEFAULT -> GHC.Types.F# ww }) -}
8aeba4827fd07053aad435f5084e098d
  cart :: Main.Cart -> [Main.Item]
  RecSel Main.Cart
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLS),1*U(A,A,1*U)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Main.Cart ->
                 case ds of wild { Main.Cart ds1 ds2 ds3 -> ds3 }) -}
0361a9dd75af8e2bdb0ba55d81ba0fa4
  desc :: Main.Item -> GHC.Base.String
  RecSel Main.Item
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,1*U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Main.Item ->
                 case ds of wild { Main.Item ds1 ds2 ds3 ds4 -> ds2 }) -}
8df5966d736f117af88d3a3c9f1de013
  discount :: Main.Cart -> GHC.Types.Float
  RecSel Main.Cart
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLL),1*U(1*U(U),A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Main.Cart ->
                 case ds of wild { Main.Cart ds1 ds2 ds3 -> ds1 }) -}
dd7e47cebc4f1c48200080f024f618de
  discountedItemIds :: Main.Cart -> Main.DiscountedItems
  RecSel Main.Cart
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSL),1*U(A,1*U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Main.Cart ->
                 case ds of wild { Main.Cart ds1 ds2 ds3 -> ds2 }) -}
cc62d2bab6d358fa47fdfcd6af49ee49
  itemId :: Main.Item -> GHC.Base.String
  RecSel Main.Item
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(1*U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Main.Item ->
                 case ds of wild { Main.Item ds1 ds2 ds3 ds4 -> ds1 }) -}
6c50ead2a0e72964084489e693c4bda2
  main :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: InlineRule (0, True, True)
                Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R)) -}
8f0c9adcf30b160f616490d0adbe5d0d
  main1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <L,U>,
     Unfolding: (\ s :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case GHC.IO.Handle.Text.hPutStr2
                        GHC.IO.Handle.FD.stdout
                        Main.main15
                        GHC.Types.True
                        s of ds1 { (#,#) ipv ipv1 ->
                 (Web.Scotty.Trans.scottyOptsT
                    @ GHC.Types.IO
                    @ Data.Text.Internal.Lazy.Text
                    @ GHC.Types.IO
                    GHC.Base.$fMonadIO
                    Control.Monad.IO.Class.$fMonadIOIO
                    Main.main12
                    (GHC.Base.id @ (GHC.Types.IO Network.Wai.Internal.Response))
                    Main.main2
                      `cast`
                    (Trans
                         (Sym (Control.Monad.Trans.State.Lazy.NTCo:StateT[0]
                                   <Web.Scotty.Internal.Types.ScottyState
                                      Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                   <Data.Functor.Identity.Identity>_R
                                   <()>_N))
                         (Sym (Web.Scotty.Internal.Types.NTCo:ScottyT[0]
                                   <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N) <()>_N)))
                   `cast`
                 (GHC.Types.NTCo:IO[0] <()>_R)
                   ipv }) -}
5aa0edd3387dd144124856aa26712ca5
  main10 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/cart"#) -}
dec0d10618157c696b8a9d2de33ec3c2
  main11 ::
    Network.HTTP.Types.Method.StdMethod
    -> Web.Scotty.Internal.Types.RoutePattern
    -> Web.Scotty.Internal.Types.ActionT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
    -> Web.Scotty.Internal.Types.ScottyT
         Data.Text.Internal.Lazy.Text GHC.Types.IO ()
  {- Unfolding: (Web.Scotty.Route.addroute
                   @ Data.Text.Internal.Lazy.Text
                   @ GHC.Types.IO
                   Web.Scotty.Internal.Types.$fScottyErrorText
                   Control.Monad.IO.Class.$fMonadIOIO) -}
5a86b03d1481d334d1d9dd5ac0a26e12
  main12 :: Web.Scotty.Internal.Types.Options
  {- Unfolding: (Web.Scotty.Internal.Types.Options
                   Web.Scotty.Internal.Types.$fDefaultOptions3
                   Main.main13) -}
94d84ffe615217e497950a41a2ce7808
  main13 :: Network.Wai.Handler.Warp.Settings.Settings
  {- Unfolding: (Network.Wai.Handler.Warp.Settings.Settings
                   Main.main14
                   Network.Wai.Handler.Warp.Settings.defaultSettings15
                   Network.Wai.Handler.Warp.Settings.defaultOnException1
                     `cast`
                   (<GHC.Base.Maybe Network.Wai.Internal.Request>_R
                    ->_R <GHC.Exception.SomeException>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultOnExceptionResponse
                   Network.Wai.Handler.Warp.Settings.defaultSettings13
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <GHC.Types.Bool>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings12
                     `cast`
                   (<Network.Socket.Types.SockAddr>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings11
                   (GHC.Base.Nothing @ Network.Wai.Handler.Warp.Timeout.Manager)
                   Web.Scotty.Internal.Types.$fDefaultOptions2
                   Network.Wai.Handler.Warp.Settings.defaultSettings8
                     `cast`
                   (Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings9
                     `cast`
                   (<(forall a20. GHC.Types.IO a20 -> GHC.Types.IO a20)
                     -> GHC.Types.IO ()>_R
                    ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   GHC.Types.False
                   Network.Wai.Handler.Warp.Settings.defaultSettings7
                     `cast`
                   (<GHC.Types.IO ()>_R ->_R Sym (GHC.Types.NTCo:IO[0] <()>_R))
                   Network.Wai.Handler.Warp.Settings.defaultSettings4
                   Network.Wai.Handler.Warp.Settings.defaultSettings2
                   Network.Wai.Handler.Warp.Settings.ProxyProtocolNone
                   Network.Wai.Handler.Warp.Settings.defaultSettings1) -}
3fb6e29aad82e2cb25c8963e6d105a4c
  main14 :: GHC.Types.Int
  {- HasNoCafRefs, Unfolding: (GHC.Types.I# 3000) -}
bb1b82134876e2d3671ff6f1daec822e
  main15 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Starting Server..."#) -}
66ef0ced4a027afa0d8eee5c7f82cdb7
  main16 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1,
     Unfolding: (GHC.TopHandler.runMainIO1
                   @ ()
                   Main.main1 `cast` (Sym (GHC.Types.NTCo:IO[0] <()>_R))) -}
32c0c8fdb9deb7ac490a330105f2f3dd
  main2 ::
    Web.Scotty.Internal.Types.ScottyState
      Data.Text.Internal.Lazy.Text GHC.Types.IO
    -> Data.Functor.Identity.Identity
         ((),
          Web.Scotty.Internal.Types.ScottyState
            Data.Text.Internal.Lazy.Text GHC.Types.IO)
  {- Arity: 1,
     Unfolding: (\ eta :: Web.Scotty.Internal.Types.ScottyState
                            Data.Text.Internal.Lazy.Text GHC.Types.IO[OneShot] ->
                 (Main.main11
                    Network.HTTP.Types.Method.POST
                    Main.main8
                    Main.main7
                      `cast`
                    (Trans
                         (<Web.Scotty.Internal.Types.ActionEnv>_R
                          ->_R Trans
                                   (<Web.Scotty.Internal.Types.ScottyResponse>_R
                                    ->_R Sym (GHC.Types.NTCo:IO[0]
                                                  <(Data.Either.Either
                                                      (Web.Scotty.Internal.Types.ActionError
                                                         Data.Text.Internal.Lazy.Text)
                                                      (),
                                                    Web.Scotty.Internal.Types.ScottyResponse)>_R))
                                   (Sym (Control.Monad.Trans.State.Lazy.NTCo:StateT[0]
                                             <Web.Scotty.Internal.Types.ScottyResponse>_N
                                             <GHC.Types.IO>_R
                                             <Data.Either.Either
                                                (Web.Scotty.Internal.Types.ActionError
                                                   Data.Text.Internal.Lazy.Text)
                                                ()>_N)))
                         (Trans
                              (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                        <Web.Scotty.Internal.Types.ActionEnv>_R
                                        <Control.Monad.Trans.State.Lazy.StateT
                                           Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                        <Data.Either.Either
                                           (Web.Scotty.Internal.Types.ActionError
                                              Data.Text.Internal.Lazy.Text)
                                           ()>_N))
                              (Trans
                                   (Sym (Control.Monad.Trans.Except.NTCo:ExceptT[0]
                                             <Web.Scotty.Internal.Types.ActionError
                                                Data.Text.Internal.Lazy.Text>_N
                                             <Control.Monad.Trans.Reader.ReaderT
                                                Web.Scotty.Internal.Types.ActionEnv
                                                (Control.Monad.Trans.State.Lazy.StateT
                                                   Web.Scotty.Internal.Types.ScottyResponse
                                                   GHC.Types.IO)>_R
                                             <()>_N))
                                   (Sym (Web.Scotty.Internal.Types.NTCo:ActionT[0]
                                             <Data.Text.Internal.Lazy.Text>_N
                                             <GHC.Types.IO>_R) <()>_N)))))
                   `cast`
                 (Trans
                      (Web.Scotty.Internal.Types.NTCo:ScottyT[0]
                           <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N <()>_N)
                      (Control.Monad.Trans.State.Lazy.NTCo:StateT[0]
                           <Web.Scotty.Internal.Types.ScottyState
                              Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                           <Data.Functor.Identity.Identity>_R
                           <()>_N))
                   (case ((Main.main11
                             Network.HTTP.Types.Method.GET
                             Main.main4
                             Main.main3
                               `cast`
                             (Trans
                                  (Sym (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                            <Web.Scotty.Internal.Types.ActionEnv>_R
                                            <Control.Monad.Trans.State.Lazy.StateT
                                               Web.Scotty.Internal.Types.ScottyResponse
                                               GHC.Types.IO>_R
                                            <Data.Either.Either
                                               (Web.Scotty.Internal.Types.ActionError
                                                  Data.Text.Internal.Lazy.Text)
                                               ()>_N))
                                  (Trans
                                       (Sym (Control.Monad.Trans.Except.NTCo:ExceptT[0]
                                                 <Web.Scotty.Internal.Types.ActionError
                                                    Data.Text.Internal.Lazy.Text>_N
                                                 <Control.Monad.Trans.Reader.ReaderT
                                                    Web.Scotty.Internal.Types.ActionEnv
                                                    (Control.Monad.Trans.State.Lazy.StateT
                                                       Web.Scotty.Internal.Types.ScottyResponse
                                                       GHC.Types.IO)>_R
                                                 <()>_N))
                                       (Sym (Web.Scotty.Internal.Types.NTCo:ActionT[0]
                                                 <Data.Text.Internal.Lazy.Text>_N
                                                 <GHC.Types.IO>_R) <()>_N))))
                            `cast`
                          (Trans
                               (Web.Scotty.Internal.Types.NTCo:ScottyT[0]
                                    <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_N <()>_N)
                               (Control.Monad.Trans.State.Lazy.NTCo:StateT[0]
                                    <Web.Scotty.Internal.Types.ScottyState
                                       Data.Text.Internal.Lazy.Text GHC.Types.IO>_N
                                    <Data.Functor.Identity.Identity>_R
                                    <()>_N))
                            eta)
                           `cast`
                         (Data.Functor.Identity.NTCo:Identity[0]
                              <((),
                                Web.Scotty.Internal.Types.ScottyState
                                  Data.Text.Internal.Lazy.Text
                                  GHC.Types.IO)>_R) of wild { (,) a20 s' ->
                    s' })) -}
9b58209ee59e359c0cbac2421aa25efb
  main3 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Control.Monad.Trans.State.Lazy.StateT
         Web.Scotty.Internal.Types.ScottyResponse
         GHC.Types.IO
         (Data.Either.Either
            (Web.Scotty.Internal.Types.ActionError
               Data.Text.Internal.Lazy.Text)
            ())
  {- Arity: 1 -}
560b5d4e525001406cef2f6d9f2130af
  main4 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture Main.main5) -}
b865478267ce61531b028ed0c4810517
  main5 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        Main.main6 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
88a0167ec6f15373e910029c9355d466
  main6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "/hello/:name"#) -}
dc33cd9279bd6b97c942b9e3524c47ac
  main7 ::
    Web.Scotty.Internal.Types.ActionEnv
    -> Web.Scotty.Internal.Types.ScottyResponse
    -> GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld,
          (Data.Either.Either
             (Web.Scotty.Internal.Types.ActionError
                Data.Text.Internal.Lazy.Text)
             (),
           Web.Scotty.Internal.Types.ScottyResponse) #)
  {- Arity: 3,
     Unfolding: (\ w5 :: Web.Scotty.Internal.Types.ActionEnv
                   eta :: Web.Scotty.Internal.Types.ScottyResponse
                   eta1 :: GHC.Prim.State# GHC.Prim.RealWorld[OneShot] ->
                 case (Web.Scotty.Action.jsonData1
                         @ Data.Text.Internal.Lazy.Text
                         @ GHC.Types.IO
                         @ Main.Cart
                         Main.$fFromJSONCart_$cparseJSON
                           `cast`
                         (Sym (Data.Aeson.Types.Class.NTCo:FromJSON[0] <Main.Cart>_N))
                         Web.Scotty.Internal.Types.$fScottyErrorText
                         Control.Monad.IO.Class.$fMonadIOIO
                         w5
                         eta)
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Data.Either.Either
                               (Web.Scotty.Internal.Types.ActionError
                                  Data.Text.Internal.Lazy.Text)
                               Main.Cart,
                             Web.Scotty.Internal.Types.ScottyResponse)>_R)
                        eta1 of ds1 { (#,#) ipv ipv1 ->
                 case ipv1 of wild { (,) a20 s' ->
                 case a20 of wild1 {
                   Data.Either.Left e1
                   -> (# ipv,
                         (Data.Either.Left
                            @ (Web.Scotty.Internal.Types.ActionError
                                 Data.Text.Internal.Lazy.Text)
                            @ ()
                            e1,
                          s') #)
                   Data.Either.Right x
                   -> (((Web.Scotty.Action.$wjson
                           @ GHC.Types.Float
                           @ Data.Text.Internal.Lazy.Text
                           @ GHC.Types.IO
                           Data.Aeson.Types.Instances.$fToJSONFloat_$srealFloatToJSON
                             `cast`
                           (Sym (Data.Aeson.Types.Class.NTCo:ToJSON[0] <GHC.Types.Float>_N))
                           GHC.Base.$fMonadIO
                           (case x of wild2 { Main.Cart ds ds2 ds3 ->
                            letrec {
                              go :: [Main.Item] -> Data.Monoid.Any
                                {- Arity: 1, Strictness: <S,1*U> -}
                              = \ ds4 :: [Main.Item] ->
                                case ds4 of wild3 {
                                  [] -> GHC.Types.False `cast` (Sym (Data.Monoid.NTCo:Any[0]))
                                  : y ys
                                  -> case GHC.List.elem
                                            @ GHC.Base.String
                                            GHC.Classes.$fEq[]_$s$fEq[]1
                                            (case y of wild4 { Main.Item ds5 ds6 ds7 ds8 -> ds5 })
                                            ds2 of wild4 {
                                       GHC.Types.False -> go ys
                                       GHC.Types.True
                                       -> GHC.Types.True `cast` (Sym (Data.Monoid.NTCo:Any[0])) } }
                            } in
                            case (go ds3) `cast` (Data.Monoid.NTCo:Any[0]) of wild3 {
                              GHC.Types.False -> Main.calc_total ds3
                              GHC.Types.True
                              -> case Main.$wcalc_total ds3 of ww { DEFAULT ->
                                 case ds of wild4 { GHC.Types.F# y ->
                                 GHC.Types.F# (GHC.Prim.timesFloat# ww y) } } } }))
                          `cast`
                        (Trans
                             (Web.Scotty.Internal.Types.NTCo:ActionT[0]
                                  <Data.Text.Internal.Lazy.Text>_N <GHC.Types.IO>_R <()>_N)
                             (Trans
                                  (Control.Monad.Trans.Except.NTCo:ExceptT[0]
                                       <Web.Scotty.Internal.Types.ActionError
                                          Data.Text.Internal.Lazy.Text>_N
                                       <Control.Monad.Trans.Reader.ReaderT
                                          Web.Scotty.Internal.Types.ActionEnv
                                          (Control.Monad.Trans.State.Lazy.StateT
                                             Web.Scotty.Internal.Types.ScottyResponse
                                             GHC.Types.IO)>_R
                                       <()>_N)
                                  (Control.Monad.Trans.Reader.NTCo:ReaderT[0]
                                       <Web.Scotty.Internal.Types.ActionEnv>_R
                                       <Control.Monad.Trans.State.Lazy.StateT
                                          Web.Scotty.Internal.Types.ScottyResponse GHC.Types.IO>_R
                                       <Data.Either.Either
                                          (Web.Scotty.Internal.Types.ActionError
                                             Data.Text.Internal.Lazy.Text)
                                          ()>_N)))
                          w5)
                         `cast`
                       (Control.Monad.Trans.State.Lazy.NTCo:StateT[0]
                            <Web.Scotty.Internal.Types.ScottyResponse>_N
                            <GHC.Types.IO>_R
                            <Data.Either.Either
                               (Web.Scotty.Internal.Types.ActionError
                                  Data.Text.Internal.Lazy.Text)
                               ()>_N)
                         s')
                        `cast`
                      (GHC.Types.NTCo:IO[0]
                           <(Data.Either.Either
                               (Web.Scotty.Internal.Types.ActionError
                                  Data.Text.Internal.Lazy.Text)
                               (),
                             Web.Scotty.Internal.Types.ScottyResponse)>_R)
                        ipv } } }) -}
5db5030476ff0d5a6b4332c3f87e8905
  main8 :: Web.Scotty.Internal.Types.RoutePattern
  {- Unfolding: (Web.Scotty.Internal.Types.Capture Main.main9) -}
0d02a822ede4f604e1baf47d661c0b5e
  main9 :: Data.Text.Internal.Lazy.Text
  {- Unfolding: (case GHC.Base.map
                        @ GHC.Types.Char
                        @ GHC.Types.Char
                        Data.Text.Internal.safe
                        Main.main10 of dt { DEFAULT ->
                 Web.Scotty.Internal.Types.$fIsStringRoutePattern_outer dt }) -}
b151981b99d0ccc4aee13e49691a2dc4
  pricePerUnit :: Main.Item -> GHC.Types.Float
  RecSel Main.Item
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,1*U(U),A)>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Main.Item ->
                 case ds of wild { Main.Item ds1 ds2 ds3 ds4 -> ds3 }) -}
07632031a40f54bb24d7961c915ba6c9
  quantity :: Main.Item -> GHC.Types.Int
  RecSel Main.Item
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,1*U(U))>,
     Unfolding: InlineRule (1, True, False)
                (\ ds :: Main.Item ->
                 case ds of wild { Main.Item ds1 ds2 ds3 ds4 -> ds4 }) -}
instance GHC.Generics.Constructor [Main.C1_0Cart]
  = Main.$fConstructorCart
instance GHC.Generics.Constructor [Main.C1_0Item]
  = Main.$fConstructorItem
instance GHC.Generics.Datatype [Main.D1Cart] = Main.$fDatatypeCart
instance GHC.Generics.Datatype [Main.D1Item] = Main.$fDatatypeItem
instance Data.Aeson.Types.Class.FromJSON [Main.Cart]
  = Main.$fFromJSONCart
instance Data.Aeson.Types.Class.FromJSON [Main.Item]
  = Main.$fFromJSONItem
instance GHC.Generics.Generic [Main.Cart] = Main.$fGenericCart
instance GHC.Generics.Generic [Main.Item] = Main.$fGenericItem
instance GHC.Generics.Selector [Main.S1_0_0Cart]
  = Main.$fSelectorCart
instance GHC.Generics.Selector [Main.S1_0_1Cart]
  = Main.$fSelectorCart0
instance GHC.Generics.Selector [Main.S1_0_2Cart]
  = Main.$fSelectorCart1
instance GHC.Generics.Selector [Main.S1_0_0Item]
  = Main.$fSelectorItem
instance GHC.Generics.Selector [Main.S1_0_1Item]
  = Main.$fSelectorItem0
instance GHC.Generics.Selector [Main.S1_0_2Item]
  = Main.$fSelectorItem1
instance GHC.Generics.Selector [Main.S1_0_3Item]
  = Main.$fSelectorItem2
instance GHC.Show.Show [Main.Cart] = Main.$fShowCart
instance GHC.Show.Show [Main.Item] = Main.$fShowItem
instance Data.Aeson.Types.Class.ToJSON [Main.Cart]
  = Main.$fToJSONCart
instance Data.Aeson.Types.Class.ToJSON [Main.Item]
  = Main.$fToJSONItem
family instance GHC.Generics.Rep [Main.Cart] = Main.Rep_Cart
family instance GHC.Generics.Rep [Main.Item] = Main.Rep_Item
"SPEC/Main $dmconFixity @ C1_0Cart" [ALWAYS] forall $dConstructor :: GHC.Generics.Constructor
                                                                       Main.C1_0Cart
  GHC.Generics.$dmconFixity @ Main.C1_0Cart $dConstructor
  = Main.$fConstructorCart_$s$dmconFixity
"SPEC/Main $dmconFixity @ C1_0Item" [ALWAYS] forall $dConstructor :: GHC.Generics.Constructor
                                                                       Main.C1_0Item
  GHC.Generics.$dmconFixity @ Main.C1_0Item $dConstructor
  = Main.$fConstructorItem_$s$dmconFixity
"SPEC/Main $dmisNewtype @ D1Cart" [ALWAYS] forall $dDatatype :: GHC.Generics.Datatype
                                                                  Main.D1Cart
  GHC.Generics.$dmisNewtype @ Main.D1Cart $dDatatype
  = Main.$fDatatypeCart_$s$dmisNewtype
"SPEC/Main $dmisNewtype @ D1Item" [ALWAYS] forall $dDatatype :: GHC.Generics.Datatype
                                                                  Main.D1Item
  GHC.Generics.$dmisNewtype @ Main.D1Item $dDatatype
  = Main.$fDatatypeItem_$s$dmisNewtype
"SPEC/Main fromString @ RoutePattern" [ALWAYS] forall tpl :: Data.String.IsString
                                                               Web.Scotty.Internal.Types.RoutePattern
  Data.String.fromString @ Web.Scotty.Internal.Types.RoutePattern tpl
  = Web.Scotty.Internal.Types.$fIsStringRoutePattern_$cfromString
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: none
require own pkg trusted: False

